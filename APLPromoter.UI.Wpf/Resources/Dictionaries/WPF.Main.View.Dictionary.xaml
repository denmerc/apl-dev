<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModel="clr-namespace:APLPromoter.UI.Wpf.ViewModel"
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:conv="clr-namespace:APLPromoter.UI.Wpf.Converters"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"    
    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
    xmlns:views="clr-namespace:APLPromoter.UI.Wpf.Views"
    mc:Ignorable="d"    
    >
	<conv:NullToBoolValueConverter x:Key="nullToBooleanConverter"/>
	<conv:NullVisibilityConverter x:Key="nullToVisConverter"/>
	<conv:NullInvisibilityConverter x:Key="nullToInvisConverter"/>
	
<LinearGradientBrush x:Key="NormalBrush2" EndPoint="0.5,1" StartPoint="0.5,0">
	<GradientStop Color="#FFAEAAAA"/>
	<GradientStop Color="#FFAEAAAA" Offset="1"/>
	<GradientStop Color="#7EFFFFFF" Offset="0.481"/>
</LinearGradientBrush>

<LinearGradientBrush x:Key="HorizontalNormalBrush" StartPoint="0,0" EndPoint="1,0">
  <GradientBrush.GradientStops>
    <GradientStopCollection>
      <GradientStop Color="#FFF" Offset="0.0"/>
      <GradientStop Color="#CCC" Offset="1.0"/>
    </GradientStopCollection>
  </GradientBrush.GradientStops>
</LinearGradientBrush>

<LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
  <GradientBrush.GradientStops>
    <GradientStopCollection>
      <GradientStop Color="#FFF" Offset="0.0"/>
      <GradientStop Color="#EEE" Offset="1.0"/>
    </GradientStopCollection>
  </GradientBrush.GradientStops>
</LinearGradientBrush>

<LinearGradientBrush x:Key="HorizontalLightBrush" StartPoint="0,0" EndPoint="1,0">
  <GradientBrush.GradientStops>
    <GradientStopCollection>
      <GradientStop Color="#FFF" Offset="0.0"/>
      <GradientStop Color="#EEE" Offset="1.0"/>
    </GradientStopCollection>
  </GradientBrush.GradientStops>
</LinearGradientBrush>

<LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
  <GradientBrush.GradientStops>
    <GradientStopCollection>
      <GradientStop Color="#FFF" Offset="0.0"/>
      <GradientStop Color="#AAA" Offset="1.0"/>
    </GradientStopCollection>
  </GradientBrush.GradientStops>
</LinearGradientBrush>

<LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
  <GradientBrush.GradientStops>
    <GradientStopCollection>
      <GradientStop Color="#BBB" Offset="0.0"/>
      <GradientStop Color="#EEE" Offset="0.1"/>
      <GradientStop Color="#EEE" Offset="0.9"/>
      <GradientStop Color="#FFF" Offset="1.0"/>
    </GradientStopCollection>
  </GradientBrush.GradientStops>
</LinearGradientBrush>

<SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
<SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Black" Opacity="0.15" />
<SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />
<SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FF0A6174"/>

<LinearGradientBrush x:Key="WindowBackgroundBrush2" EndPoint="0.5,1" StartPoint="0.5,0">
	<GradientStop Color="#FFF4F4F4" Offset="1"/>
	<GradientStop Color="#FFAEAAAA"/>
</LinearGradientBrush>

<!-- Border Brushes -->
<LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
  <GradientBrush.GradientStops>
    <GradientStopCollection>
      <GradientStop Color="#CCC" Offset="0.0"/>
      <GradientStop Color="#444" Offset="1.0"/>
    </GradientStopCollection>
  </GradientBrush.GradientStops>
</LinearGradientBrush>

<LinearGradientBrush x:Key="HorizontalNormalBorderBrush" StartPoint="0,0" EndPoint="1,0">
  <GradientBrush.GradientStops>
    <GradientStopCollection>
      <GradientStop Color="#CCC" Offset="0.0"/>
      <GradientStop Color="#444" Offset="1.0"/>
    </GradientStopCollection>
  </GradientBrush.GradientStops>
</LinearGradientBrush>

<LinearGradientBrush x:Key="DefaultedBorderBrush" StartPoint="0,0" EndPoint="0,1">
  <GradientBrush.GradientStops>
    <GradientStopCollection>
      <GradientStop Color="#777" Offset="0.0"/>
      <GradientStop Color="#000" Offset="1.0"/>
    </GradientStopCollection>
  </GradientBrush.GradientStops>
</LinearGradientBrush>

<LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
  <GradientBrush.GradientStops>
    <GradientStopCollection>
      <GradientStop Color="#444" Offset="0.0"/>
      <GradientStop Color="#888" Offset="1.0"/>
    </GradientStopCollection>
  </GradientBrush.GradientStops>
</LinearGradientBrush>

<ImageBrush x:Key="SolidBorderBrush" ImageSource="/APLPromoter.UI.Wpf;component/Resources/Images/BlankButtons/BlankMessageCenterHeader.png" Opacity="0.295" />
<!-- Miscellaneous Brushes -->
<SolidColorBrush x:Key="GlyphBrush" Color="#444" />
<SolidColorBrush x:Key="LightColorBrush" Color="#DDD" />
<SolidColorBrush x:Key="LightBorderBrush" Color="#AAA" />

<Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator">       
  <Setter Property="Height" Value="1"/>
  <Setter Property="Margin" Value="0,4,0,4"/>
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="Separator">
        <Border BorderBrush="{StaticResource SolidBorderBrush}" BorderThickness="1"/>               
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>

<!-- TopLevelHeader -->
<ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}"
     TargetType="MenuItem"
	 >
  <Border Name="Border" >
    <Grid>
      <ContentPresenter 
        Margin="6,3,6,3" 
        ContentSource="Header" 
        RecognizesAccessKey="True" />
      <Popup Name="Popup"        
        Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}"        
        AllowsTransparency="True" Focusable="False" PopupAnimation="Fade"
		>               
        <Border Name="SubmenuBorder"          
          SnapsToDevicePixels="True" BorderThickness="1"
          Background="{Binding DataContext.UserSettings.BackgroundBrush,
			RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type views:MainView}},
            UpdateSourceTrigger=PropertyChanged}"
          BorderBrush="{StaticResource SolidBorderBrush}"
          >
          <StackPanel  
            IsItemsHost="True" 
            KeyboardNavigation.DirectionalNavigation="Cycle" />
        </Border>
      </Popup>
    </Grid>
  </Border>
  <ControlTemplate.Triggers>
    <Trigger Property="IsSuspendingPopupAnimation" Value="false">
      <Setter TargetName="Popup" Property="PopupAnimation" Value="slide"/>
    </Trigger>
    <Trigger Property="IsHighlighted" Value="true">
      <Setter TargetName="Border" Property="Background"
              Value="{StaticResource NormalBrush2}"/>
      <Setter TargetName="Border" Property="BorderBrush"
              Value="Transparent"/>
    </Trigger>
    <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
      <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,4,4"/>
      <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,3"/>
    </Trigger>
    <Trigger Property="IsEnabled" Value="False">
      <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
    </Trigger>
  </ControlTemplate.Triggers>
</ControlTemplate>
<!-- TopLevelItem -->

<ControlTemplate 
  x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" 
  TargetType="MenuItem">
  <Border Name="Border" >
    <Grid>
      <ContentPresenter 
        Margin="6,3,6,3" 
        ContentSource="Header"
        RecognizesAccessKey="True" />
    </Grid>
  </Border>
  <ControlTemplate.Triggers>
    <Trigger Property="IsHighlighted" Value="true">
      <Setter TargetName="Border" Property="Background"
              Value="{StaticResource NormalBrush2}"/>
      <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
    </Trigger>
    <Trigger Property="IsEnabled" Value="False">
      <Setter Property="Foreground"
              Value="{StaticResource DisabledForegroundBrush}"/>
    </Trigger>
  </ControlTemplate.Triggers>
</ControlTemplate>

<!-- SubmenuItem -->
<ControlTemplate 
  x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" 
  TargetType="MenuItem">
  <Border Name="Border">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
        <ColumnDefinition Width="13"/>
      </Grid.ColumnDefinitions>
      <Grid Grid.ColumnSpan="1" HorizontalAlignment="Stretch" Height="25" VerticalAlignment="Stretch" Width="25">
      	<Image Source="{Binding ImageUrl}" VerticalAlignment="Stretch" Margin="4" Stretch="Fill"/>
      </Grid>
    	<ContentPresenter x:Name="Icon"    		
    		Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon"
			/>    		    		
    	<Border x:Name="Check"      		
    		Width="13" Height="13" BorderThickness="1"    		
    		Margin="6,0,6,0" Visibility="Collapsed"
    		Background="{StaticResource NormalBrush2}"    		
    		BorderBrush="{StaticResource NormalBorderBrush}"
			>
    		<Path x:Name="CheckMark"    			
    			Width="7" Height="7" StrokeThickness="2"    			 
    			SnapsToDevicePixels="False" Visibility="Hidden"
    			Stroke="{StaticResource GlyphBrush}"  Data="M 0 0 L 7 7 M 0 7 L 7 0"
				/>    			    			
    	</Border>
    	<ContentPresenter x:Name="HeaderHost" Grid.Column="1"   		    		
    		ContentSource="Header" RecognizesAccessKey="True" VerticalAlignment="Center"
			/>    		
    	<TextBlock x:Name="InputGestureText" Grid.Column="2"    		
    		Text="{TemplateBinding InputGestureText}" Margin="5,2,0,2" DockPanel.Dock="Right"    		
    		/>
    </Grid>
  </Border>
  <ControlTemplate.Triggers>
    <Trigger Property="Icon" Value="{x:Null}">
      <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
    </Trigger>
    <Trigger Property="IsChecked" Value="true">
      <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
    </Trigger>
    <Trigger Property="IsCheckable" Value="true">
      <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
      <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
    </Trigger>
    <Trigger Property="IsHighlighted" Value="true">
      <Setter TargetName="Border" Property="Background"
              Value="{StaticResource SelectedBackgroundBrush}"/>
    </Trigger>
    <Trigger Property="IsEnabled" Value="false">
      <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
    </Trigger>
  </ControlTemplate.Triggers>
</ControlTemplate>

<!-- SubmenuHeader -->
<ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}"   
	TargetType="MenuItem"
	>
  <Border Name="Border" >
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
        <ColumnDefinition Width="13"/>
      </Grid.ColumnDefinitions>
      <ContentPresenter Name="Icon"        
        Margin="6,0,6,0" VerticalAlignment="Center"        
        ContentSource="Icon"
		/>
      <ContentPresenter  Name="HeaderHost" Grid.Column="1"               
        ContentSource="Header" RecognizesAccessKey="True"
		/>
      <TextBlock x:Name="InputGestureText" Grid.Column="2"       
        Text="{TemplateBinding InputGestureText}"
        Margin="5,2,2,2" DockPanel.Dock="Right"
        />
      <Path Grid.Column="3"
        HorizontalAlignment="Center" VerticalAlignment="Center"        
        Data="M 0 0 L 0 7 L 4 3.5 Z" Fill="{StaticResource GlyphBrush}"         
		/>
      <Popup Name="Popup"        
        Placement="Right" HorizontalOffset="-4"         
        IsOpen="{TemplateBinding IsSubmenuOpen}"
        AllowsTransparency="True" Focusable="False" PopupAnimation="Fade"        
        >
        <Border Name="SubmenuBorder"          
			SnapsToDevicePixels="True" BorderThickness="1" 
			Background="{StaticResource WindowBackgroundBrush2}"
			BorderBrush="{StaticResource SolidBorderBrush}"
			>
          <StackPanel  
            IsItemsHost="True" 
            KeyboardNavigation.DirectionalNavigation="Cycle" />
        </Border>
      </Popup>
    </Grid>
  </Border>
  <ControlTemplate.Triggers>
    <Trigger Property="Icon" Value="{x:Null}">
      <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
    </Trigger>
    <Trigger Property="IsHighlighted" Value="true">
      <Setter TargetName="Border" Property="Background"
              Value="{StaticResource SelectedBackgroundBrush}"/>
    </Trigger>
    <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
      <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4"/>
      <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3"/>
    </Trigger>
    <Trigger Property="IsEnabled" Value="false">
      <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
    </Trigger>
  </ControlTemplate.Triggers>
</ControlTemplate>

<!-- MenuItem Style -->
<Style x:Key="{x:Type MenuItem}" TargetType="MenuItem">
  <Setter Property="OverridesDefaultStyle" Value="True"/>
  <Style.Triggers>
    <Trigger Property="Role" Value="TopLevelHeader">
      <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
      <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
    </Trigger>
    <Trigger Property="Role" Value="TopLevelItem">
      <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
    </Trigger>
    <Trigger Property="Role" Value="SubmenuHeader">
      <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
    </Trigger>
    <Trigger Property="Role" Value="SubmenuItem">
      <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
    </Trigger>
  </Style.Triggers>
</Style>

    <HierarchicalDataTemplate x:Key="MenuItemTemplate" 
		ItemsSource="{Binding Items}"
		>
        <TextBlock x:Name="MenuTextBlock" 
			Text="{Binding Text, FallbackValue=My Fallback}" Foreground="{Binding DataContext.UserSettings.TextBrush,
			RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type views:MainView}},
            UpdateSourceTrigger=PropertyChanged}" 
			FontFamily="{DynamicResource APLDefault}" 
			FontSize="{Binding FontSize}"
			/>
    </HierarchicalDataTemplate>

	<DataTemplate x:Key="APLHeaderNavigation">
        <Grid x:Name="LayoutRoot"
			d:DesignWidth="1920" Height="35" 
			Background="{Binding UserSettings.HeaderBrush, UpdateSourceTrigger=PropertyChanged}"			                           
              >
            <Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="734*"/>
				<ColumnDefinition Width="Auto"/>
			</Grid.ColumnDefinitions>
			<Grid x:Name="LogoGrid" Grid.Column="2"
				HorizontalAlignment="Stretch" Height="Auto" 
				VerticalAlignment="Stretch" Width="Auto"  Margin="0,0,10,0"
				>
				<Image Source="/APLPromoter.UI.Wpf;component/Resources/Images/Logos/PromoterPNGLogo-TradeMark.png" Stretch="Fill"/>
			</Grid>
		<Grid x:Name="PromoterGrid" Grid.RowSpan="2"
			Height="Auto"  Width="Auto"
			VerticalAlignment="Stretch" 
			HorizontalAlignment="Stretch"
			>
			<Menu x:Name="Navigation" 
				IsMainMenu="True" Background="{x:Null}" 
				HorizontalAlignment="Center" VerticalAlignment="Center" 
				FontFamily="{DynamicResource APLDefault}"              
				ItemsSource="{Binding MenuViewModel.Items, UpdateSourceTrigger=PropertyChanged}"
                ItemTemplate="{StaticResource MenuItemTemplate}"
				>
				<Menu.ItemContainerStyle>
					<Style TargetType="MenuItem">
						<Setter Property="Command" Value="{Binding DataContext.NotifyOnClickCommand, ElementName=Navigation}" />
						<Setter Property="CommandParameter" Value="{Binding}" />
					</Style>
				</Menu.ItemContainerStyle>				
			</Menu>
		</Grid>			
		</Grid>
	</DataTemplate>
<!--Trevor WIP Footer might be needed TBD-->
	<DataTemplate x:Key="FooterNavigationDataTemplate">
		<Grid x:Name="LayoutRoot" 
			d:DesignWidth="1920" d:DesignHeight="25" Height="25"
			>
			<Grid.Background>
				<ImageBrush ImageSource="/APLPromoter.UI.Wpf;component/Resources/Images/BlankButtons/BlankMessageCenterHeader.png"/>
			</Grid.Background>
		</Grid>
	</DataTemplate>
</ResourceDictionary>