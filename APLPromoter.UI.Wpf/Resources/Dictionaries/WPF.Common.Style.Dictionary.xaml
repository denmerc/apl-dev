<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
    xmlns:Controls="clr-namespace:APLPromoter.UI.WPF.Controls" 
    xmlns:Chromes="clr-namespace:Telerik.Windows.Controls.Chromes;assembly=Telerik.Windows.Controls" 
    xmlns:Primitives="clr-namespace:Telerik.Windows.Controls.Primitives;assembly=Telerik.Windows.Controls.Navigation"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:conv="clr-namespace:APLPromoter.UI.Wpf.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
    xmlns:views="clr-namespace:APLPromoter.UI.Wpf.Views">

<!-- Resource dictionary entries should be defined here. -->
<!--End Dennis Styles Here-->

    <conv:BooleanToVisibilityConverter x:Key="boolToVisConv"></conv:BooleanToVisibilityConverter>
<!--Moved Dennis Styles-->
	<Style x:Key="title_style" TargetType="{x:Type TextBlock}">
		<Setter Property="Foreground" Value="#1fa3eb" />
		<Setter Property="FontSize" Value="24" />
		<Setter Property="FontFamily"
			Value="/Telerik.Windows.QuickStartUITheme;component/Fonts/MyriadPro-Light.otf#Myriad Pro Light" />
		<Setter Property="FontWeight" Value="Light" />
	</Style>

	<Style TargetType="{x:Type TextBlock}" x:Key="textBlock_info">
		<Setter Property="Foreground" Value="#FF7C7C7C" />
		<Setter Property="FontWeight" Value="Bold" />
		<Setter Property="FontSize" Value="12" />
		<Setter Property="FontFamily" Value="SegoeUI" />
	</Style>

	<Style TargetType="{x:Type TextBlock}" x:Key="textBlock_number">
		<Setter Property="Foreground" Value="#FF7C7C7C" />
		<Setter Property="FontSize" Value="21" />
		<Setter Property="FontFamily" Value="SegoeUI" />
	</Style>

	<Style TargetType="{x:Type TextBlock}" x:Key="title_style_info">
		<Setter Property="Foreground" Value="#25a0da" />
		<Setter Property="FontWeight" Value="Bold" />
		<Setter Property="FontSize" Value="12" />
		<Setter Property="FontFamily" Value="SegoeUI" />
	</Style>

	<Style TargetType="{x:Type TextBlock}" x:Key="style_info">
		<Setter Property="Foreground" Value="#333" />
		<Setter Property="Margin" Value="0 0 0 5" />
		<Setter Property="FontSize" Value="12" />
		<Setter Property="FontFamily" Value="SegoeUI" />
	</Style>

	<Style x:Key="GridViewHeaderRowStyle1" TargetType="{x:Type telerik:GridViewHeaderRow}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:GridViewHeaderRow}">
					<telerik:SelectiveScrollingGrid>
						<telerik:SelectiveScrollingGrid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
						</telerik:SelectiveScrollingGrid.ColumnDefinitions>
						<telerik:SelectiveScrollingGrid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition/>
						</telerik:SelectiveScrollingGrid.RowDefinitions>
						<telerik:CommonHeaderPresenter  x:Name="PART_CommonHeaderPresenter" Grid.Column="3" 
							IsTabStop="False" Background="{x:Null}"
							>
							<telerik:StyleManager.Theme>
								<telerik:Windows8Theme/>
							</telerik:StyleManager.Theme>
						</telerik:CommonHeaderPresenter>
						<Border x:Name="CommonHeaderIndent" 
							BorderBrush="#FF848484" BorderThickness="0,0,1,1" 
							Background="#FF3B3B3B" Grid.ColumnSpan="2" Margin="-1,0,0,0" 
							telerik:SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" 
							Visibility="{Binding Visibility, ElementName=PART_CommonHeaderPresenter}"
							/>
						<Grid x:Name="PART_OuterGrid" Grid.ColumnSpan="4" Grid.Row="1">
							<Grid.RowDefinitions>
								<RowDefinition Height="*"/>
								<RowDefinition Height="*"/>
							</Grid.RowDefinitions>
							<Border x:Name="PART_GridViewHeaderRowBorder" 
								BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
								Padding="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								>
								<Border BorderBrush="#FF4B4B4B" BorderThickness="1" Background="{TemplateBinding Background}"/>
							</Border>
							<Border x:Name="PART_FieldFilterPlaceholder" Grid.Row="1" 
								BorderBrush="#FF848484" BorderThickness="0,0,1,1" 
								Background="#FF3B3B3B" Visibility="{TemplateBinding FieldFilterPlaceholderVisibility}"
								/>
						</Grid>
						<telerik:DataCellsPresenter x:Name="PART_DataCellsPresenter" Grid.Column="3" IsTabStop="False" Grid.Row="1">
							<telerik:StyleManager.Theme>
								<telerik:Office_BlackTheme/>
							</telerik:StyleManager.Theme>
						</telerik:DataCellsPresenter>
						<Border x:Name="PART_IndicatorPresenter" Grid.Row="1"
							BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,1,1"  
							telerik:SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" 
							Visibility="{TemplateBinding RowIndicatorVisibility}" Width="25"
							>
							<Border BorderBrush="#FF4B4B4B" BorderThickness="1">
								<Border.Background>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="#FF5B5B5B" Offset="1"/>
										<GradientStop Color="#FF868686"/>
										<GradientStop Color="#FF4F4F4F" Offset="0.42"/>
										<GradientStop Color="#FF0E0E0E" Offset="0.43"/>
									</LinearGradientBrush>
								</Border.Background>
							</Border>
						</Border>
						<telerik:IndentPresenter x:Name="PART_IndentPresenter" Grid.Column="1" Grid.Row="1" 
							IsTabStop="False" IndentLevel="{TemplateBinding IndentLevel}" 
							MinHeight="{TemplateBinding MinHeight}" 
							telerik:SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
							>
							<telerik:IndentPresenter.ItemTemplate>
								<DataTemplate>
									<telerik:GridViewHeaderIndentCell IsTabStop="False">
										<telerik:StyleManager.Theme>
											<telerik:Windows8Theme/>
										</telerik:StyleManager.Theme>
									</telerik:GridViewHeaderIndentCell>
								</DataTemplate>
							</telerik:IndentPresenter.ItemTemplate>
							<telerik:StyleManager.Theme>
								<telerik:Office_BlackTheme/>
							</telerik:StyleManager.Theme>
						</telerik:IndentPresenter>
						<Border x:Name="PART_CommonHeaderHierarchyIndentPresenterAllLevels" Grid.Column="2" Grid.Row="0" Grid.RowSpan="10"
							BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,1,1" Background="#FF3B3B3B" 
							telerik:SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Width="25"
							>
							<Border.Visibility>
								<Binding Path="HasHierarchy" RelativeSource="{RelativeSource TemplatedParent}">
									<Binding.Converter>
										<telerik:BooleanToVisibilityConverter/>
									</Binding.Converter>
								</Binding>
							</Border.Visibility>
						</Border>
						<Border x:Name="PART_CommonHeaderHierarchyIndentPresenterFirstLevel" Grid.Row="0" Grid.RowSpan="1" Grid.Column="2"
							BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,1,1" 
							Background="#FF3B3B3B"  Margin="0,-1,0,0" Width="25"
							telerik:SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" 
							>
							<Border.Visibility>
								<Binding Path="HasHierarchy" RelativeSource="{RelativeSource TemplatedParent}">
									<Binding.Converter>
										<telerik:BooleanToVisibilityConverter/>
									</Binding.Converter>
								</Binding>
							</Border.Visibility>
						</Border>
						<Border x:Name="PART_HierarchyIndentPresenter" Grid.Column="2" Grid.Row="1" 
							BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,1,1"
							telerik:SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Width="25"
							>
							<Border.Visibility>
								<Binding Path="HasHierarchy" RelativeSource="{RelativeSource TemplatedParent}">
									<Binding.Converter>
										<telerik:BooleanToVisibilityConverter/>
									</Binding.Converter>
								</Binding>
							</Border.Visibility>
							<Border BorderBrush="#FF4B4B4B" BorderThickness="1">
								<Border.Background>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="#FF5B5B5B" Offset="1"/>
										<GradientStop Color="#FF868686"/>
										<GradientStop Color="#FF4F4F4F" Offset="0.42"/>
										<GradientStop Color="#FF0E0E0E" Offset="0.43"/>
									</LinearGradientBrush>
								</Border.Background>
							</Border>
						</Border>
					</telerik:SelectiveScrollingGrid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="White"/>
		<Setter Property="MinHeight" Value="27"/>
		<Setter Property="BorderBrush" Value="#FF848484"/>
		<Setter Property="BorderThickness" Value="1,0,0,1"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
	</Style>
<!--Start Trevor's Style-->

	<Style x:Key="ImageButtonStyle" TargetType="{x:Type Controls:ImageButton}">
		<Setter Property="Background" Value="{x:Null}"/>
		<Setter Property="BorderBrush" Value="{x:Null}"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Controls:ImageButton}">
					<Grid x:Name="LayoutRoot">
						<Image x:Name="ImageIdle" 
							Source="{TemplateBinding ImageSourceIdle}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Stretch="Fill" 
                               />
						<Image x:Name="ImageActive" 
							Source="{TemplateBinding ImageSourceActive}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Stretch="Fill" Visibility="Hidden" 
                               />
						<Image x:Name="ImageDisabled" 
							Source="{TemplateBinding ImageSourceDisabled}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Stretch="Fill" Visibility="Hidden" 
                               />
						<Image x:Name="ImageHover" 
							Source="{TemplateBinding ImageSourceHover}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Stretch="Fill" Visibility="Hidden" Opacity="0.5" 
                               />
						<Image x:Name="ImagePressed" 
							Source="{TemplateBinding ImageSourcePressed}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Stretch="Fill" Visibility="Hidden" 
                               />
						<ContentPresenter 
							x:Name="contentPresenter" 
							Margin="{TemplateBinding Padding}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
							RenderTransformOrigin="0.5,0.5" RecognizesAccessKey="True" 
							/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsActive" Value="True">
							<Setter Property="Visibility" TargetName="ImageActive" Value="Visible"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Visibility" TargetName="ImageDisabled" Value="Visible"/>
							<Setter Property="Visibility" TargetName="ImageIdle" Value="Hidden"/>
							<Setter Property="Opacity" Value="0.75" />
							<Setter Property="Effect" TargetName="ImageActive">
								<!--if ImageSourceDisabled not specified-->
								<Setter.Value>
									<BlurEffect Radius="3"/>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Visibility" TargetName="ImageHover" Value="Visible"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Visibility" TargetName="ImagePressed" Value="Visible"/>
							<Setter Property="Visibility" TargetName="ImageIdle" Value="Hidden"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ImageToggleButtonStyle" TargetType="{x:Type Controls:ImageToggleButton}">
		<Setter Property="Background" Value="{x:Null}"/>
		<Setter Property="BorderBrush" Value="{x:Null}"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Controls:ImageToggleButton}">
					<Grid x:Name="LayoutRoot">
						<Grid x:Name="ImageGrid"
							MinHeight="{Binding ActualHeight, ElementName=contentPresenter}"
							MinWidth="{Binding ActualWidth, ElementName=contentPresenter}"
							>
							<Image x:Name="ImageIdle" 
								Source="{TemplateBinding ImageSourceIdle}" 
								Stretch="{Binding ImageSourceStretch, RelativeSource={RelativeSource TemplatedParent}}"
								StretchDirection="{Binding ImageSourceStretchDirection, RelativeSource={RelativeSource TemplatedParent}}"
								/>
							<Image x:Name="ImageActive" 
								Source="{TemplateBinding ImageSourceActive}" 
								Stretch="{Binding ImageSourceStretch, RelativeSource={RelativeSource TemplatedParent}}"
								StretchDirection="{Binding ImageSourceStretchDirection, RelativeSource={RelativeSource TemplatedParent}}"
								Visibility="Hidden" 
								/>
							<Image x:Name="ImageDisabled" 
								Source="{TemplateBinding ImageSourceIdleDisabled}" 
								Stretch="{Binding ImageSourceStretch, RelativeSource={RelativeSource TemplatedParent}}"
								StretchDirection="{Binding ImageSourceStretchDirection, RelativeSource={RelativeSource TemplatedParent}}"
								Visibility="Hidden" 
								/>
							<Image x:Name="ImageHover" 
								Source="{TemplateBinding ImageSourceIdleHover}" 
								Stretch="{Binding ImageSourceStretch, RelativeSource={RelativeSource TemplatedParent}}"
								StretchDirection="{Binding ImageSourceStretchDirection, RelativeSource={RelativeSource TemplatedParent}}"
								Visibility="Hidden" Opacity="0.95" 
								/>
							<Image x:Name="ImagePressed" 
								Source="{TemplateBinding ImageSourceIdlePressed}" 
								Stretch="{Binding ImageSourceStretch, RelativeSource={RelativeSource TemplatedParent}}"
								StretchDirection="{Binding ImageSourceStretchDirection, RelativeSource={RelativeSource TemplatedParent}}"
								Visibility="Hidden" 
								/>
						</Grid>
						<ContentPresenter 
							x:Name="contentPresenter" 
							Margin="{TemplateBinding Padding}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
							RecognizesAccessKey="True" 
							/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Visibility" TargetName="ImageIdle" Value="Hidden"/>
							<Setter Property="Visibility" TargetName="ImageActive" Value="Visible"/>
							<Setter Property="Source" TargetName="ImageHover" Value="{Binding ImageSourceActiveHover, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:ImageToggleButton}}}"/>
							<Setter Property="Source" TargetName="ImagePressed" Value="{Binding ImageSourceActivePressed, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:ImageToggleButton}}}"/>
							<Setter Property="Source" TargetName="ImageDisabled" Value="{Binding ImageSourceActiveDisabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:ImageToggleButton}}}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Visibility" TargetName="ImageActive" Value="Hidden"/>
							<Setter Property="Visibility" TargetName="ImageDisabled" Value="Visible"/>
							<Setter Property="Visibility" TargetName="ImageIdle" Value="Hidden"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Visibility" TargetName="ImageHover" Value="Visible"/>
							<Setter Property="Visibility" TargetName="ImageActive" Value="Hidden"/>
							<Setter Property="Visibility" TargetName="ImageIdle" Value="Hidden"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Visibility" TargetName="ImagePressed" Value="Visible"/>
							<Setter Property="Visibility" TargetName="ImageActive" Value="Hidden"/>
							<Setter Property="Visibility" TargetName="ImageIdle" Value="Hidden"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>		
	</Style>

	<Style x:Key="ImageRadioButtonStyle" TargetType="{x:Type Controls:ImageRadioButton}">
		<Setter Property="Background" Value="#00000000"/>
		<Setter Property="BorderBrush" Value="{x:Null}"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="FontFamily" Value="{DynamicResource APLDefault}"/>
		<Setter Property="FontSize" Value="{DynamicResource DefaultLabelSize}"/>
		<Setter Property="Foreground" Value="{DynamicResource ButtonDefaultForeground}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="5,1"/>
		<Setter Property="Height" Value="60"/>
		<Setter Property="Width" Value="60"/>
		<Setter Property="IsHitTestVisible" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Controls:ImageRadioButton}">
					<Grid x:Name="ButtonGrid" 
						Background="{TemplateBinding Background}" 
						RenderTransformOrigin="0.5,0.5"
						>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates"/>
							<VisualStateGroup x:Name="FocusStates"/>
							<VisualStateGroup x:Name="CheckStates"/>
							<VisualStateGroup x:Name="ValidationStates"/>
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="ImageGrid"
							MinHeight="{Binding ActualHeight, ElementName=contentPresenter}"
							MinWidth="{Binding ActualWidth, ElementName=contentPresenter}"
							>
							<Image x:Name="ImageIdle" 
								Source="{TemplateBinding ImageSourceIdle}" 
								Stretch="{Binding ImageSourceStretch, RelativeSource={RelativeSource TemplatedParent}}"
								StretchDirection="{Binding ImageSourceStretchDirection, RelativeSource={RelativeSource TemplatedParent}}"
								IsHitTestVisible="True"
								/>
							<Image x:Name="ImageActive" 
								Source="{TemplateBinding ImageSourceActive}" 
								Stretch="{Binding ImageSourceStretch, RelativeSource={RelativeSource TemplatedParent}}"
								StretchDirection="{Binding ImageSourceStretchDirection, RelativeSource={RelativeSource TemplatedParent}}"
								IsHitTestVisible="True" Visibility="Hidden" 
								/>
							<Image x:Name="ImageDisabled" 
								Source="{TemplateBinding ImageSourceDisabled}" 
								Stretch="{Binding ImageSourceStretch, RelativeSource={RelativeSource TemplatedParent}}"
								StretchDirection="{Binding ImageSourceStretchDirection, RelativeSource={RelativeSource TemplatedParent}}"
								IsHitTestVisible="True" Visibility="Hidden" 
								/>
							<Image x:Name="ImageHover" 
								Source="{TemplateBinding ImageSourceIdleHover}" 
								Stretch="{Binding ImageSourceStretch, RelativeSource={RelativeSource TemplatedParent}}"
								StretchDirection="{Binding ImageSourceStretchDirection, RelativeSource={RelativeSource TemplatedParent}}"
								IsHitTestVisible="True" Visibility="Hidden"
								/>
							<Image x:Name="ImagePressed" 
								Source="{TemplateBinding ImageSourceIdlePressed}" 
								Stretch="{Binding ImageSourceStretch, RelativeSource={RelativeSource TemplatedParent}}"
								StretchDirection="{Binding ImageSourceStretchDirection, RelativeSource={RelativeSource TemplatedParent}}"
								IsHitTestVisible="True" Visibility="Hidden" 
								/>
						</Grid>
						<ContentPresenter x:Name="contentPresenter" Grid.Row="1" 
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
							Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}" 
							RecognizesAccessKey="True" RenderTransformOrigin="0.5,0.5" 
							/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<!--Note: This Trigger must set before "IsChecked" Trigger-->
							<Setter Property="Opacity" TargetName="ButtonGrid" Value="0.2" />
							<Setter Property="Visibility" TargetName="ImageActive" Value="Hidden"/>
							<Setter Property="Visibility" TargetName="ImageDisabled" Value="Visible"/>
							<Setter Property="Visibility" TargetName="ImageIdle" Value="Hidden"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<!-- This causes the button to be disabled functionally.
							<Setter Property="IsHitTestVisible" Value="False" />
							-->
							<Setter Property="Visibility" TargetName="ImageIdle" Value="Hidden"/>
							<Setter Property="Visibility" TargetName="ImageActive" Value="Visible"/>
							<Setter Property="Source" TargetName="ImageHover" Value="{Binding ImageSourceActiveHover, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:ImageRadioButton}}}"/>
							<Setter Property="Source" TargetName="ImagePressed" Value="{Binding ImageSourceActivePressed, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:ImageRadioButton}}}"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Visibility" TargetName="ImageHover" Value="Visible"/>
							<Setter Property="Visibility" TargetName="ImageActive" Value="Hidden"/>
							<Setter Property="Visibility" TargetName="ImageIdle" Value="Hidden"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Visibility" TargetName="ImagePressed" Value="Visible"/>
							<Setter Property="Visibility" TargetName="ImageActive" Value="Hidden"/>
							<Setter Property="Visibility" TargetName="ImageIdle" Value="Hidden"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>		
	</Style>

	<Style x:Key="EmbossPassword" TargetType="{x:Type PasswordBox}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type PasswordBox}">
					<Border x:Name="PasswordBoxBorder" 
						Background="#3F000000" BorderBrush="#7F007ACC" BorderThickness="1" CornerRadius="2" >
						<Grid x:Name="PasswordBoxGrid" Background="Transparent">
							<ScrollViewer x:Name="PART_ContentHost" BorderBrush="#B2007ACC"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="PasswordBoxBorder" Property="Background" Value="Transparent" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>		
	</Style>

	<Style x:Key="ButtonFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="2" SnapsToDevicePixels="true" 
						Stroke="{DynamicResource FocusBrush}" 
						StrokeThickness="1" StrokeDashArray="1 2"
						/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#F3F3F3" Offset="0"/>
		<GradientStop Color="#EBEBEB" Offset="0.5"/>
		<GradientStop Color="#DDDDDD" Offset="0.5"/>
		<GradientStop Color="#CDCDCD" Offset="1"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>

<Style TargetType="Button">
      <Setter Property="Background" Value="#FF1F3B53"/>
      <Setter Property="Foreground" Value="#FF000000"/>
      <Setter Property="Padding" Value="3"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="BorderBrush">
          <Setter.Value>
              <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                  <GradientStop Color="#FFA3AEB9" Offset="0"/>
                  <GradientStop Color="#FF8399A9" Offset="0.375"/>
                  <GradientStop Color="#FF718597" Offset="0.375"/>
                  <GradientStop Color="#FF617584" Offset="1"/>
              </LinearGradientBrush>
          </Setter.Value>
      </Setter>
      <Setter Property="Template">
          <Setter.Value>
              <ControlTemplate TargetType="Button">
                  <Grid>
                      <VisualStateManager.VisualStateGroups>
                          <VisualStateGroup x:Name="CommonStates">
                              <VisualState x:Name="Normal"/>
                              <VisualState x:Name="MouseOver">
                                  <Storyboard>
                                      <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity" To="1"/>
                                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#F2FFFFFF"/>
                                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" To="#CCFFFFFF"/>
                                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" To="#7FFFFFFF"/>
                                  </Storyboard>
                              </VisualState>
                              <VisualState x:Name="Pressed">
                                  <Storyboard>
                                      <ColorAnimation Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF6DBDD1"/>
                                      <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity" To="1"/>
                                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" To="#D8FFFFFF"/>
                                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#C6FFFFFF"/>
                                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" To="#8CFFFFFF"/>
                                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" To="#3FFFFFFF"/>
                                  </Storyboard>
                              </VisualState>
                              <VisualState x:Name="Disabled">
                                  <Storyboard>
                                      <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity" To=".55"/>
                                  </Storyboard>
                              </VisualState>
                          </VisualStateGroup>
                          <VisualStateGroup x:Name="FocusStates">
                              <VisualState x:Name="Focused">
                                  <Storyboard>
                                      <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="1"/>
                                  </Storyboard>
                              </VisualState>
                              <VisualState x:Name="Unfocused" />
                          </VisualStateGroup>
                      </VisualStateManager.VisualStateGroups>
                      <Border x:Name="Background" CornerRadius="3" Background="White" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                          <Grid Background="{TemplateBinding Background}"  Margin="1">
                              <Rectangle x:Name="BackgroundGradient" >
                                  <Rectangle.Fill>
                                      <LinearGradientBrush StartPoint=".7,0" EndPoint=".7,1">
                                          <GradientStop Color="#FFFFFFFF" Offset="0" />
                                          <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                                          <GradientStop Color="#E5FFFFFF" Offset="0.625" />
                                          <GradientStop Color="#C6FFFFFF" Offset="1" />
                                      </LinearGradientBrush>
                                  </Rectangle.Fill>
                              </Rectangle>
                              <Rectangle Height="Auto" VerticalAlignment="Stretch" Width="Auto" 
									Fill="{Binding DataContext.UserSettings.HeaderBrush,
										RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type views:MainView}},
										UpdateSourceTrigger=PropertyChanged}"
										>                              	
                              </Rectangle>
                              <Border Opacity="0"  x:Name="BackgroundAnimation" 								
									Background="{Binding DataContext.UserSettings.BackgroundBrush,
										RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type views:MainView}},
										UpdateSourceTrigger=PropertyChanged}" 
										/>
                          </Grid>
                      </Border>
                      <ContentPresenter
                              x:Name="contentPresenter"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}"/>
                      <Rectangle x:Name="DisabledVisualElement" RadiusX="3" RadiusY="3" Fill="#FFFFFFFF" Opacity="0" IsHitTestVisible="false" />
                      <Rectangle x:Name="FocusVisualElement" RadiusX="2" RadiusY="2" Margin="1" Stroke="#FF6DBDD1" StrokeThickness="1" Opacity="0" IsHitTestVisible="false" />
                  </Grid>
              </ControlTemplate>
          </Setter.Value>
      </Setter>
  </Style>

	<Style TargetType="ToggleButton">
      <Setter Property="Background" Value="#FF1F3B53"/>
      <Setter Property="Foreground" Value="#FF000000"/>
      <Setter Property="Padding" Value="2"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="BorderBrush">
          <Setter.Value>
              <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                  <GradientStop Color="#FFA3AEB9" Offset="0"/>
                  <GradientStop Color="#FF8399A9" Offset="0.375"/>
                  <GradientStop Color="#FF718597" Offset="0.375"/>
                  <GradientStop Color="#FF617584" Offset="1"/>
              </LinearGradientBrush>
          </Setter.Value>
      </Setter>
      <Setter Property="Template">
          <Setter.Value>
              <ControlTemplate TargetType="ToggleButton">
                  <Grid>
                      <VisualStateManager.VisualStateGroups>
                          <VisualStateGroup x:Name="CommonStates">
                              <VisualState x:Name="Normal"/>
                              <VisualState x:Name="MouseOver">
                                  <Storyboard>
                                      <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity" To="0.75"/>
                                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#F2FFFFFF"/>
                                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" To="#CCFFFFFF"/>
                                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" To="#7FFFFFFF"/>
                                  </Storyboard>
                              </VisualState>
                              <VisualState x:Name="Pressed">
                                  <Storyboard>
                                      <ColorAnimation Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF6DBDD1"/>
                                      <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity" To="1"/>
                                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" To="#F2FFFFFF"/>
                                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#CCFFFFFF"/>
                                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" To="#8CFFFFFF"/>
                                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" To="#7FFFFFFF"/>
                                      <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background)" Storyboard.TargetName="BackgroundAnimation">
                                      	<DiscreteObjectKeyFrame KeyTime="0">
                                      		<DiscreteObjectKeyFrame.Value>
                                      			<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                      				<GradientStop Color="#FF787878" Offset="0.799"/>
                                      				<GradientStop Color="#FFB9B9B9" Offset="1"/>
                                      			</LinearGradientBrush>
                                      		</DiscreteObjectKeyFrame.Value>
                                      	</DiscreteObjectKeyFrame>
                                      </ObjectAnimationUsingKeyFrames>
                                  </Storyboard>
                              </VisualState>
                              <VisualState x:Name="Disabled">
                                  <Storyboard>
                                      <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity" To="0.9"/>
                                      <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="DisabledVisualElement">
                                      	<EasingColorKeyFrame KeyTime="0" Value="#FF6C6C76"/>
                                      </ColorAnimationUsingKeyFrames>
                                      <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="DisabledVisualElement">
                                      	<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                      </DoubleAnimationUsingKeyFrames>
                                  </Storyboard>
                              </VisualState>
                          </VisualStateGroup>
                          <VisualStateGroup x:Name="CheckStates">
                              <VisualState x:Name="Checked">
                                  <Storyboard>
                                      <PointAnimation Duration="0" To="0.7,1" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.StartPoint)"/>
                                      <PointAnimation Duration="0" To="0.7,0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.EndPoint)"/>
                                  </Storyboard>
                              </VisualState>
                              <VisualState x:Name="Unchecked"/>
                          </VisualStateGroup>
                          <VisualStateGroup x:Name="FocusStates">
                              <VisualState x:Name="Focused">
                                  <Storyboard>
                                      <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="1"/>
                                  </Storyboard>
                              </VisualState>
                              <VisualState x:Name="Unfocused" />
                          </VisualStateGroup>
                      </VisualStateManager.VisualStateGroups>
                      <Border x:Name="Background" CornerRadius="3" Background="White" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                          <Grid Background="{TemplateBinding Background}"  Margin="1">
                              <Rectangle x:Name="BackgroundGradient" >
                          		<Rectangle.Fill>
                          			<LinearGradientBrush StartPoint=".7,0" EndPoint=".7,1">
                          				<GradientStop Color="White" Offset="0" />
                          				<GradientStop Color="#F9FFFFFF" Offset="0.375" />
                          				<GradientStop Color="#E5FFFFFF" Offset="0.625" />
                          				<GradientStop Color="White" Offset="1" />
                          			</LinearGradientBrush>
                          		</Rectangle.Fill>
                          	</Rectangle>
                          	<Rectangle x:Name="rectangle" 
								Height="Auto" VerticalAlignment="Stretch" Width="Auto" 
                          		Fill="{Binding DataContext.UserSettings.HeaderBrush, 
								RelativeSource={RelativeSource AncestorType={x:Type views:MainView}, 
								Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged}" Opacity="1"
								/>
                          	<Border Opacity="0"  x:Name="BackgroundAnimation"
								Background="{Binding DataContext.UserSettings.BackgroundBrush,
									RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type views:MainView}},
									UpdateSourceTrigger=PropertyChanged}" 
									/>

                          </Grid>
                      </Border>
                      <ContentPresenter
                              x:Name="contentPresenter"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}"/>
                      <Rectangle x:Name="DisabledVisualElement" 
						RadiusX="3" RadiusY="3" Fill="#FFFFFFFF" 
						Opacity="0" IsHitTestVisible="false"
						/>
                      <Rectangle x:Name="FocusVisualElement"         
						RadiusX="2" RadiusY="2" Margin="1" StrokeThickness="1"						 
						Opacity="0" IsHitTestVisible="false" Fill="#99AEAEAE" Stroke="#97E6FD00" 
						/>
                  </Grid>
              </ControlTemplate>
          </Setter.Value>
      </Setter>
  </Style>

	<Style x:Key="BlankImageButtonGlow" TargetType="{x:Type Controls:ImageButton}">
		<Setter Property="Background" Value="{DynamicResource ButtonNormalBackground}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource ButtonNormalBorder}"/>
		<Setter Property="FocusVisualStyle" Value="{DynamicResource ButtonFocusVisual}"/>
		<Setter Property="Foreground" Value="{DynamicResource ButtonDefaultForeground}"/>
		<Setter Property="FontSize" Value="{DynamicResource DefaultLabelSize}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<ContentPresenter x:Name="contentPresenter" 
						HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
						VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
						RecognizesAccessKey="True" Margin="{TemplateBinding Padding}" 
						RenderTransformOrigin="0.5,0.5">
						<ContentPresenter.RenderTransform>
							<TransformGroup>
								<ScaleTransform/>
								<SkewTransform/>
								<RotateTransform/>
								<TranslateTransform/>
							</TransformGroup>
						</ContentPresenter.RenderTransform>
						<ContentPresenter.Effect>
							<DropShadowEffect Color="{DynamicResource ShadowBrushBlack}"/>
						</ContentPresenter.Effect>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.5"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver"/>
								<VisualState x:Name="Pressed"/>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</ContentPresenter>
					<ControlTemplate.Triggers>
						<Trigger Property="IsFocused" Value="True"/>
						<Trigger Property="IsDefaulted" Value="True"/>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="RenderTransform" TargetName="contentPresenter">
								<Setter.Value>
									<TransformGroup>
										<ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Effect" TargetName="contentPresenter">
								<Setter.Value>
									<DropShadowEffect Color="{DynamicResource ShadowBrushSilver}"/>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" TargetName="contentPresenter" Value="0.4"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>		
	</Style>

	<Style x:Key="BlankImageToggleButtonGlow" TargetType="{x:Type Controls:ImageToggleButton}">
		<Setter Property="Foreground" Value="{DynamicResource ButtonDefaultForeground}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="5,1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.5"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver"/>
								<VisualState x:Name="Pressed"/>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentPresenter x:Name="contentPresenter" 
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
							RenderTransformOrigin="0.5,0.5" Margin="{TemplateBinding Padding}" 
							RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                            >
							<ContentPresenter.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</ContentPresenter.RenderTransform>
						</ContentPresenter>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="RenderTransform" TargetName="contentPresenter">
								<Setter.Value>
									<TransformGroup>
										<ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Effect" TargetName="contentPresenter" Value="{DynamicResource ButtonPressedEffect}"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="Effect" TargetName="contentPresenter" Value="{DynamicResource ButtonCheckedEffect}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Opacity" TargetName="contentPresenter" Value="0.25"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FontFamily" Value="{DynamicResource APLDefault}"/>
		<Setter Property="FontSize" Value="{DynamicResource DefaultLabelSize}"/>
		<Setter Property="Background" Value="#00000000"/>
		<Setter Property="BorderBrush" Value="{x:Null}"/>		
	</Style>

	<Style x:Key="BlankToggleButtonGlow" TargetType="{x:Type ToggleButton}">
		<Setter Property="Foreground" Value="{DynamicResource ButtonDefaultForeground}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="5,1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.5"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver"/>
								<VisualState x:Name="Pressed"/>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentPresenter x:Name="contentPresenter" 
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
							RenderTransformOrigin="0.5,0.5" Margin="{TemplateBinding Padding}" 
							RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                            >
							<ContentPresenter.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</ContentPresenter.RenderTransform>
						</ContentPresenter>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="RenderTransform" TargetName="contentPresenter">
								<Setter.Value>
									<TransformGroup>
										<ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Effect" TargetName="contentPresenter" Value="{DynamicResource ButtonPressedEffect}"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="Effect" TargetName="contentPresenter" Value="{DynamicResource ButtonCheckedEffect}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Opacity" TargetName="contentPresenter" Value="0.25"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FontFamily" Value="{DynamicResource APLDefault}"/>
		<Setter Property="FontSize" Value="{DynamicResource DefaultLabelSize}"/>
		<Setter Property="Background" Value="#00000000"/>
		<Setter Property="BorderBrush" Value="{x:Null}"/>		
	</Style>
	<Style x:Key="BlankButtonGlow" TargetType="{x:Type Button}">
		<Setter Property="Foreground" Value="{DynamicResource ButtonDefaultForeground}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="5,1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.5"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver"/>
								<VisualState x:Name="Pressed"/>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentPresenter x:Name="contentPresenter" 
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
							RenderTransformOrigin="0.5,0.5" Margin="{TemplateBinding Padding}" 
							RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                            >
							<ContentPresenter.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</ContentPresenter.RenderTransform>
						</ContentPresenter>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="RenderTransform" TargetName="contentPresenter">
								<Setter.Value>
									<TransformGroup>
										<ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Effect" TargetName="contentPresenter" Value="{DynamicResource ButtonPressedEffect}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Opacity" TargetName="contentPresenter" Value="0.25"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FontFamily" Value="{DynamicResource APLDefault}"/>
		<Setter Property="FontSize" Value="{DynamicResource DefaultLabelSize}"/>
		<Setter Property="Background" Value="#00000000"/>
		<Setter Property="BorderBrush" Value="{x:Null}"/>		
	</Style>

	<Style x:Key="BlankImageRadioButtonGlow" TargetType="{x:Type Controls:ImageRadioButton}">
		<Setter Property="Foreground" Value="{DynamicResource ButtonDefaultForeground}"/>
		<Setter Property="Background" Value="#F4F4F4"/>
		<Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RadioButton}">
					<Grid x:Name="RadioButtonGrid" Height="Auto" Width="Auto" RenderTransformOrigin="0.5,0.5">
						<Grid.RenderTransform>
							<TransformGroup>
								<ScaleTransform/>
								<SkewTransform/>
								<RotateTransform/>
								<TranslateTransform/>
							</TransformGroup>
						</Grid.RenderTransform>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames 
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" 
											Storyboard.TargetName="RadioButtonGrid">
											<EasingDoubleKeyFrame KeyTime="0" Value="1.2"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames 
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" 
											Storyboard.TargetName="RadioButtonGrid">
											<EasingDoubleKeyFrame KeyTime="0" Value="1.2"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed"/>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentPresenter x:Name="contentPresenter" RecognizesAccessKey="True"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Effect" TargetName="contentPresenter" Value="{DynamicResource ButtonCheckedEffect}"/>
						</Trigger>
						<Trigger Property="HasContent" Value="true">
							<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonCheckRadioFocusVisual}"/>
							<Setter Property="Padding" Value="4,0,0,0"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>				
	</Style>

	<Style x:Key="ButtonCheckRadioFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" 
						Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" 
						StrokeThickness="1" StrokeDashArray="1 2"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="Style.Image.MenuItem" TargetType="{x:Type Image}">
		<Setter Property="Width" Value="16"/>
		<Setter Property="Height" Value="16"/>
		<Setter Property="Margin" Value="2,0,8,0"/>
	</Style>
    
	<Style x:Key="Style.MenuItem.Cut" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
		<Setter Property="Header" Value="Menu_Cut"/>
		<Setter Property="InputGestureText" Value="Ctrl+X"/>
		<Setter Property="Command" Value="Cut"/>
		<Setter Property="Icon">
			<Setter.Value>
				<Image Style="{DynamicResource Style.Image.MenuItem}" Source="/Resources/Images/ContextMenu/Cut.png"/>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="Style.MenuItem.Copy" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
		<Setter Property="Header" Value="Menu Copy}"/>
		<Setter Property="InputGestureText" Value="Ctrl+C"/>
		<Setter Property="Command" Value="Copy"/>
		<Setter Property="Icon">
			<Setter.Value>
				<Image Style="{DynamicResource Style.Image.MenuItem}" Source="/Resources/Images/ContextMenu/Copy.png"/>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="Style.MenuItem.Paste" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
		<Setter Property="Header" Value="Menu Paste"/>
		<Setter Property="InputGestureText" Value="Ctrl+V"/>
		<Setter Property="Command" Value="Paste"/>
		<Setter Property="Icon">
			<Setter.Value>
				<Image Style="{DynamicResource Style.Image.MenuItem}" Source="/Resources/Images/ContextMenu/Paste.png"/>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="Style.MenuItem.SelectAll" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
		<Setter Property="Header" Value="Menu SelectAll"/>
		<Setter Property="InputGestureText" Value="Ctrl+A"/>
		<Setter Property="Command" Value="SelectAll"/>
		<Setter Property="Icon">
			<Setter.Value>
				<Image Style="{DynamicResource Style.Image.MenuItem}" Source="/Resources/Images/ContextMenu/Menu-Home.png"/>
			</Setter.Value>
		</Setter>
	</Style>

	<ContextMenu x:Key="TextBoxContextMenu">
		<MenuItem Style="{DynamicResource Style.MenuItem.Cut}"/>
		<MenuItem Style="{DynamicResource Style.MenuItem.Copy}"/>
		<MenuItem Style="{DynamicResource Style.MenuItem.Paste}"/>
		<MenuItem Style="{DynamicResource Style.MenuItem.SelectAll}"/>
	</ContextMenu>	

	<Style x:Key="ToolTipStyle_Ribbon" TargetType="{x:Type ToolTip}" >
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="BorderBrush" Value="{x:Null}"/>
		<Setter Property="Background" Value="{x:Null}"/>
		<Setter Property="Placement" Value="Top"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToolTip}">
					<Grid>
						<Border 
							BorderThickness="0.6" Background="#CC131313" BorderBrush="#FF153874">
							<Border.OpacityMask>
								<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
									<GradientStop Color="#00000000" Offset="0"/>
									<GradientStop Color="#00000000" Offset="1"/>
									<GradientStop Color="Black" Offset="0.06"/>
									<GradientStop Color="Black" Offset="0.94"/>
								</LinearGradientBrush>
							</Border.OpacityMask>
						</Border>
						<TextBlock 
							Style="{x:Null}"
							Text="{TemplateBinding Content}"
							TextTrimming="None"
							Margin="15,5" Foreground="#FF5588E0" TextAlignment="Center" FontSize="14.667"
							/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ListBoxStyle" TargetType="{x:Type ListBox}">
		<Setter Property="Background" Value="{x:Null}"/>
		<Setter Property="BorderBrush" Value="{x:Null}"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="Foreground" Value="#FF7098C0"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBox}">
					<Border x:Name="Bd" 
						Background="{TemplateBinding Background}" 
						BorderBrush="{TemplateBinding BorderBrush}" 
						BorderThickness="{TemplateBinding BorderThickness}" 
						Padding="0" SnapsToDevicePixels="true" 
						CornerRadius="1" Margin="0">
						<ScrollViewer Focusable="false" 
							Padding="{TemplateBinding Padding}" 
							HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
							VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" 
                            >
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</ScrollViewer>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="BlankListBoxStyle" TargetType="{x:Type ListBox}">
		<Setter Property="Background" Value="Transparent" />       
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>               
		<Setter Property="VerticalContentAlignment" Value="Center"/>                         
		<Setter Property="Padding" Value="2,0,0,0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBox}">
					<ContentPresenter
						x:Name="contentPresenter"
						HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
						VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="IsEnabled" TargetName="contentPresenter" Value="False" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>		
	</Style>

	<Style x:Key="ListViewItem" TargetType="{x:Type ListViewItem}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListViewItem}">
					<Border x:Name="Border"												
						Padding="2" SnapsToDevicePixels="true"
						>
						<ContentPresenter />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="true">
							<Setter TargetName="Border" Property="Background" Value="#DDDDDD"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="#888888"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="BlankListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
		<Setter Property="Background" Value="Transparent" />       
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>               
		<Setter Property="VerticalContentAlignment" Value="Center"/>                         
		<Setter Property="Padding" Value="2,0,0,0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<ContentPresenter
						x:Name="contentPresenter"
						HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
						VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="IsEnabled" TargetName="contentPresenter" Value="False" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="SingleExpanderButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Tag" Value="Left"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<ContentPresenter x:Name="contentPresenter" 
							Margin="{TemplateBinding Padding}" 
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							RecognizesAccessKey="True" 
							/>
						<Path x:Name="ExpanderIcon" 
							Data="M0,0 19,0 10,19 0,0z" 
							Fill="{TemplateBinding Background}" 
							Stroke="{TemplateBinding BorderBrush}" 
							StrokeThickness="{TemplateBinding BorderThickness}" 
							HorizontalAlignment="Left" VerticalAlignment="Top"
							RenderTransformOrigin="0.5,0.5" >
							<Path.RenderTransform>
								<TransformGroup>
									<ScaleTransform ScaleX="1" ScaleY="1"/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Path.RenderTransform>
						</Path>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" TargetName="ExpanderIcon" Value="0.3"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Fill" TargetName="ExpanderIcon" Value="{DynamicResource ListHeaderForeground}"/>
							<Setter Property="Stroke" TargetName="ExpanderIcon" Value="White"/>
						</Trigger>
						<Trigger Property="Tag" Value="Left">
							<Setter Property="RenderTransform" TargetName="ExpanderIcon">
								<Setter.Value>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform Angle="90"/>
										<TranslateTransform/>
									</TransformGroup>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="Tag" Value="Right">
							<Setter Property="RenderTransform" TargetName="ExpanderIcon">
								<Setter.Value>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform Angle="-90"/>
										<TranslateTransform/>
									</TransformGroup>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="Tag" Value="Top">
							<Setter Property="RenderTransform" TargetName="ExpanderIcon">
								<Setter.Value>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform Angle="180"/>
										<TranslateTransform/>
									</TransformGroup>
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>		
	</Style>

	<Style x:Key="SingleExpanderRadioButtonStyle" TargetType="{x:Type RadioButton}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Tag" Value="Left"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RadioButton}">
					<Grid>
						<ContentPresenter x:Name="contentPresenter" 
							Margin="{TemplateBinding Padding}" 
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							RecognizesAccessKey="True" 
							/>
						<Path x:Name="ExpanderIcon" 
							Data="M0,0 19,0 10,19 0,0z" 
							Fill="{TemplateBinding Background}" 
							Stroke="{TemplateBinding BorderBrush}" 
							StrokeThickness="{TemplateBinding BorderThickness}" 
							HorizontalAlignment="Left" VerticalAlignment="Top"
							RenderTransformOrigin="0.5,0.5" >
							<Path.RenderTransform>
								<TransformGroup>
									<ScaleTransform ScaleX="1" ScaleY="1"/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Path.RenderTransform>
						</Path>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" TargetName="ExpanderIcon" Value="0.3"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Fill" TargetName="ExpanderIcon" Value="{DynamicResource ListHeaderForeground}"/>
							<Setter Property="Stroke" TargetName="ExpanderIcon" Value="White"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Fill" TargetName="ExpanderIcon" Value="{DynamicResource ListHeaderForeground}"/>
							<Setter Property="Stroke" TargetName="ExpanderIcon" Value="White"/>
						</Trigger>
						<Trigger Property="Tag" Value="Left">
							<Setter Property="RenderTransform" TargetName="ExpanderIcon">
								<Setter.Value>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform Angle="90"/>
										<TranslateTransform/>
									</TransformGroup>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="Tag" Value="Right">
							<Setter Property="RenderTransform" TargetName="ExpanderIcon">
								<Setter.Value>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform Angle="-90"/>
										<TranslateTransform/>
									</TransformGroup>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="Tag" Value="Top">
							<Setter Property="RenderTransform" TargetName="ExpanderIcon">
								<Setter.Value>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform Angle="180"/>
										<TranslateTransform/>
									</TransformGroup>
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<SolidColorBrush x:Key="Expander.MouseOver.Circle.Stroke" Color="#FF3C7FB1"/>
	<SolidColorBrush x:Key="Expander.MouseOver.Circle.Fill" Color="Transparent"/>
	<SolidColorBrush x:Key="Expander.MouseOver.Arrow.Stroke" Color="#222"/>
	<SolidColorBrush x:Key="Expander.Pressed.Circle.Stroke" Color="#FF526C7B"/>
	<SolidColorBrush x:Key="Expander.Pressed.Circle.Fill" Color="Transparent"/>
	<SolidColorBrush x:Key="Expander.Pressed.Arrow.Stroke" Color="#FF003366"/>
	<SolidColorBrush x:Key="Expander.Disabled.Circle.Stroke" Color="DarkGray"/>
	<SolidColorBrush x:Key="Expander.Disabled.Circle.Fill" Color="Transparent"/>
	<SolidColorBrush x:Key="Expander.Disabled.Arrow.Stroke" Color="#666"/>
	<SolidColorBrush x:Key="Expander.Static.Circle.Fill" Color="Transparent"/>
	<SolidColorBrush x:Key="Expander.Static.Circle.Stroke" Color="DarkGray"/>
	<SolidColorBrush x:Key="Expander.Static.Arrow.Stroke" Color="#666"/>

	<Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Padding="{TemplateBinding Padding}">
						<Grid Background="Transparent" SnapsToDevicePixels="False">
							<Grid.RowDefinitions>
								<RowDefinition Height="19"/>
								<RowDefinition Height="*"/>
							</Grid.RowDefinitions>
							<Grid>
								<Grid.LayoutTransform>
									<TransformGroup>
										<TransformGroup.Children>
											<TransformCollection>
												<RotateTransform Angle="-90"/>
											</TransformCollection>
										</TransformGroup.Children>
									</TransformGroup>
								</Grid.LayoutTransform>
								<Ellipse x:Name="circle" 
									Fill="{StaticResource Expander.Static.Circle.Fill}" 
									HorizontalAlignment="Center" Height="19" 
									Stroke="{StaticResource Expander.Static.Circle.Stroke}" 
									VerticalAlignment="Center" Width="19"
									/>
								<Path x:Name="arrow" 
									Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" 
									SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" 
									StrokeThickness="2" VerticalAlignment="Center"
									/>
							</Grid>
							<ContentPresenter HorizontalAlignment="Center" 
								Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" 
								SnapsToDevicePixels="True" VerticalAlignment="Top"
								/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
							<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
							<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
							<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
							<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
							<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
							<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
							<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Padding="{TemplateBinding Padding}">
						<Grid Background="Transparent" SnapsToDevicePixels="False">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="19"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Grid>
								<Grid.LayoutTransform>
									<TransformGroup>
										<TransformGroup.Children>
											<TransformCollection>
												<RotateTransform Angle="180"/>
											</TransformCollection>
										</TransformGroup.Children>
									</TransformGroup>
								</Grid.LayoutTransform>
								<Ellipse x:Name="circle" 
									Fill="{StaticResource Expander.Static.Circle.Fill}" 
									HorizontalAlignment="Center" Height="19" 
									Stroke="{StaticResource Expander.Static.Circle.Stroke}" 
									VerticalAlignment="Center" Width="19"
									/>
								<Path x:Name="arrow" 
									Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" 
									SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" 
									StrokeThickness="2" VerticalAlignment="Center"
									/>
							</Grid>
							<ContentPresenter Grid.Column="1" 
								HorizontalAlignment="Left" Margin="4,0,0,0" 
								RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"
								/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
							<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
							<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
							<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
							<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
							<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
							<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
							<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Padding="{TemplateBinding Padding}">
						<Grid Background="Transparent" SnapsToDevicePixels="False">
							<Grid.RowDefinitions>
								<RowDefinition Height="19"/>
								<RowDefinition Height="*"/>
							</Grid.RowDefinitions>
							<Grid>
								<Grid.LayoutTransform>
									<TransformGroup>
										<TransformGroup.Children>
											<TransformCollection>
												<RotateTransform Angle="90"/>
											</TransformCollection>
										</TransformGroup.Children>
									</TransformGroup>
								</Grid.LayoutTransform>
								<Ellipse x:Name="circle" 
									Fill="{StaticResource Expander.Static.Circle.Fill}" 
									HorizontalAlignment="Center" Height="19" 
									Stroke="{StaticResource Expander.Static.Circle.Stroke}" 
									VerticalAlignment="Center" Width="19"
									/>
								<Path x:Name="arrow" 
									Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" 
									SnapsToDevicePixels="false" StrokeThickness="2" VerticalAlignment="Center"
									Stroke="{StaticResource Expander.Static.Arrow.Stroke}" 
									/>
							</Grid>
							<ContentPresenter Grid.Row="1" 
								HorizontalAlignment="Center" Margin="0,4,0,0"  
								RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"
								/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
							<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
							<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
							<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
							<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
							<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
							<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
							<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ExpanderHeaderFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Border>
						<Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="OnLoaded1" RepeatBehavior="Forever">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Offset)" Storyboard.TargetName="path">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.036"/>
								<EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.918"/>
								<EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.067"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Border >
						<Grid SnapsToDevicePixels="False" Background="{Binding DataContext.UserSettings.BackgroundBrush,
							RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type views:MainView}},
							UpdateSourceTrigger=PropertyChanged}"
							>
							<Ellipse x:Name="circle" 
								Fill="{StaticResource Expander.Static.Circle.Fill}" 
								HorizontalAlignment="Center" Height="19" 
								Stroke="{StaticResource Expander.Static.Circle.Stroke}" 
								VerticalAlignment="Center" Width="19" Visibility="Collapsed"
								/>
							<Path x:Name="arrow" 
								Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" 
								Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" 
								VerticalAlignment="Center" Visibility="Collapsed"
								/>
							<ContentPresenter Grid.Column="0" 
								Margin="8,0,0,0" RecognizesAccessKey="True" 
								SnapsToDevicePixels="True" VerticalAlignment="Center"
								/>
                            <Path x:Name="path" 
                                  Visibility="{Binding IsWorking, Converter={StaticResource boolToVisConv}}"  
                                  Data="M2,26.625 L69.956782,26.625" HorizontalAlignment="Stretch" 
								  Height="4" Stretch="Fill" StrokeThickness="4" 
								  VerticalAlignment="Bottom" Margin="-1.375,0,-1.043,0"
								  >
								<Path.Stroke>
									<LinearGradientBrush EndPoint="1.053,0.5" MappingMode="RelativeToBoundingBox" StartPoint="-0.041,0.502">
										<GradientStop Color="#FF275F00" Offset="0.036"/>
										<GradientStop Color="White" Offset="1"/>
										<GradientStop Color="White"/>
									</LinearGradientBrush>
								</Path.Stroke>
							</Path>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="FrameworkElement.Loaded" SourceName="path">
							<BeginStoryboard Storyboard="{StaticResource OnLoaded1}"/>
						</EventTrigger>
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
							<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
							<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
							<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
							<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
							<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
							<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
							<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
    <Style x:Key="MessageCenterExpanderStyle" TargetType="{x:Type Expander}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsActive}" Value="False">
				<Setter Property="BorderBrush" Value="Blue"/>
				<Setter Property="BorderThickness" Value="1"/>
				<Setter Property="Opacity" Value=".5"/>
			</DataTrigger>
		</Style.Triggers>

		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Background" Value="{x:Null}"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="2"/>
		<Setter Property="FontSize" Value="{DynamicResource DefaultLabelSize}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Expander}">
					<Grid SnapsToDevicePixels="true" >
						<DockPanel Margin="1,0,1,2">
							<ToggleButton x:Name="HeaderSite" 
								ContentTemplate="{TemplateBinding HeaderTemplate}" 
								ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" 
								Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{Binding DataContext.UserSettings.TextBrush,
								RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type views:MainView}},
								UpdateSourceTrigger=PropertyChanged}" 
								FontSize="{DynamicResource DefaultLabelSize}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" 
								FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" 
								FontFamily="SegoeUI" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
								IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
								Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" 
								VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Height="30"
								BorderBrush="{x:Null}" Margin="1,0" Background="{x:Null}"
                                 />
							<ContentPresenter x:Name="ExpandSite" 
								DockPanel.Dock="Bottom" Focusable="false" 
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
								Margin="{TemplateBinding Padding}" Visibility="Collapsed" 
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								/>
						</DockPanel>
						<Rectangle HorizontalAlignment="Stretch" Height="Auto"
							Stroke="{Binding DataContext.UserSettings.BorderBrush,
							RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type views:MainView}},
							UpdateSourceTrigger=PropertyChanged}" 
							VerticalAlignment="Stretch" Width="Auto" 
							RadiusX="1" RadiusY="1" StrokeThickness=".5"
							>							
						</Rectangle>
					</Grid>					
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="true">										
							<Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
						</Trigger>
						<Trigger Property="ExpandDirection" Value="Right">
							<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
							<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
							<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}"/>
						</Trigger>
						<Trigger Property="ExpandDirection" Value="Up">
							<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
							<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
							<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
						</Trigger>
						<Trigger Property="ExpandDirection" Value="Left">
							<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
							<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
							<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    
    <Style x:Key="StepButtonStyle" TargetType="{x:Type ToggleButton}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsActive}" Value="False">
				<Setter Property="BorderBrush" Value="Blue"/>
				<Setter Property="BorderThickness" Value="1"/>
				<Setter Property="Opacity" Value=".5"/>
			</DataTrigger>
		</Style.Triggers>

        <Setter Property="Background" Value="#FF1F3B53"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity" To="0.75"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#F2FFFFFF"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" To="#CCFFFFFF"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" To="#7FFFFFFF"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF6DBDD1"/>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity" To="1"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" To="#F2FFFFFF"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#CCFFFFFF"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" To="#8CFFFFFF"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" To="#7FFFFFFF"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background)" Storyboard.TargetName="BackgroundAnimation">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="#FF787878" Offset="0.799"/>
                                                        <GradientStop Color="#FFB9B9B9" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity" To="0.9"/>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="DisabledVisualElement">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FF6C6C76"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="DisabledVisualElement">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <PointAnimation Duration="0" To="0.7,1" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.StartPoint)"/>
                                        <PointAnimation Duration="0" To="0.7,0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(LinearGradientBrush.EndPoint)"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background" CornerRadius="3" Background="White" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <Grid Background="{TemplateBinding Background}"  Margin="1">
                                <Rectangle x:Name="BackgroundGradient" >
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint=".7,0" EndPoint=".7,1">
                                            <GradientStop Color="White" Offset="0" />
                                            <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                                            <GradientStop Color="#E5FFFFFF" Offset="0.625" />
                                            <GradientStop Color="White" Offset="1" />
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle x:Name="rectangle" 
								Height="Auto" VerticalAlignment="Stretch" Width="Auto" 
                          		Fill="{Binding DataContext.UserSettings.HeaderBrush, 
								RelativeSource={RelativeSource AncestorType={x:Type views:MainView}, 
								Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged}" Opacity="1"
								/>
                                <Border Opacity="0"  x:Name="BackgroundAnimation"
								Background="{Binding DataContext.UserSettings.BackgroundBrush,
									RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type views:MainView}},
									UpdateSourceTrigger=PropertyChanged}" 
									/>

                            </Grid>
                        </Border>
                        <ContentPresenter
                              x:Name="contentPresenter"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}"/>
                        <Rectangle x:Name="DisabledVisualElement" 
						RadiusX="3" RadiusY="3" Fill="#FFFFFFFF" 
						Opacity="0" IsHitTestVisible="false"
						/>
                        <Rectangle x:Name="FocusVisualElement"         
						RadiusX="2" RadiusY="2" Margin="1" StrokeThickness="1"						 
						Opacity="0" IsHitTestVisible="false" Fill="#99AEAEAE" Stroke="#97E6FD00" 
						/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	<Style x:Key="RadPaneStyle" TargetType="{x:Type telerik:RadPane}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:RadPane}">
					<Grid x:Name="wrapper">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation BeginTime="0" To="0.33" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HeaderElement"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver"/>
								<VisualState x:Name="Selected">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ChromePinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="PinnedStates">
								<VisualState x:Name="Unpinned">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ChromeUnpinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pinned">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ChromePinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="PlacementStates">
								<VisualState x:Name="HorizontalLeft"/>
								<VisualState x:Name="HorizontalRight"/>
								<VisualState x:Name="HorizontalTop">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="wrapper">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0,0,-1,4</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="HeaderElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>6,3</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="HorizontalBottom">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="wrapper">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0,4,-1,0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="HeaderElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>6,3</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="VerticalLeft">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="wrapper">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0,0,4,-1</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="HeaderElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>3,6</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Orientation" Storyboard.TargetName="ChromeUnpinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Orientation>Vertical</Orientation>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Orientation" Storyboard.TargetName="ChromePinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Orientation>Vertical</Orientation>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="VerticalRight">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="wrapper">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>4,0,0,-1</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="HeaderElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>3,6</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Orientation" Storyboard.TargetName="ChromeUnpinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Orientation>Vertical</Orientation>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Orientation" Storyboard.TargetName="ChromePinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Orientation>Vertical</Orientation>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="VerticalTop"/>
								<VisualState x:Name="VerticalBottom"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Chromes:ButtonChrome x:Name="ChromeUnpinned" 
							BorderThickness="1" CornerRadius="2" RenderSelected="{TemplateBinding IsSelected}" 
							RenderHighlighted="{TemplateBinding IsMouseOver}" Visibility="Collapsed"
							>
							<Chromes:ButtonChrome.Style>
								<Style TargetType="{x:Type Chromes:ButtonChrome}">
									<Setter Property="Background">
										<Setter.Value>
											<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
												<GradientStop Color="#FFF6F6F6" Offset="0"/>
												<GradientStop Color="#FFD2D2D2" Offset="1"/>
											</LinearGradientBrush>
										</Setter.Value>
									</Setter>
									<Setter Property="BorderBrush" Value="#FF848484"/>
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type Chromes:ButtonChrome}">
												<Border x:Name="OuterBorder" 
													BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
													Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}"
													>
													<VisualStateManager.VisualStateGroups>
														<VisualStateGroup x:Name="CommonStates">
															<VisualState x:Name="Disabled">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFE0E0E0"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF989898"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFE0E0E0"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Normal"/>
															<VisualState x:Name="Highlighted">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="#FFFFFBA3" Offset="1"/>
																					<GradientStop Color="#FFFFFBDA"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Selected">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedHighlighted">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFFFC92B"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="NormalVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="#FFF6F6F6" Offset="0"/>
																					<GradientStop Color="#FFD2D2D2" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="HighlightedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="#FFFFFBA3" Offset="1"/>
																					<GradientStop Color="#FFFFFBDA"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedHighlightedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFFFC92B"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
														</VisualStateGroup>
													</VisualStateManager.VisualStateGroups>
													<Border x:Name="InnerBorder" 
														BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" 
														CornerRadius="{TemplateBinding InnerCornerRadius}"
														/>
												</Border>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</Chromes:ButtonChrome.Style>
						</Chromes:ButtonChrome>
						<Chromes:ButtonChrome x:Name="ChromePinned" 
							BorderThickness="1,0,1,1" CornerRadius="0,0,2,2" 
							Margin="0,1,0,0" RenderSelected="{TemplateBinding IsSelected}" 
							RenderHighlighted="{TemplateBinding IsMouseOver}" Visibility="Collapsed"
							>
							<Chromes:ButtonChrome.Style>
								<Style TargetType="{x:Type Chromes:ButtonChrome}">
									<Setter Property="Background">
										<Setter.Value>
											<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
												<GradientStop Color="#FFF6F6F6" Offset="0"/>
												<GradientStop Color="#FFD2D2D2" Offset="1"/>
											</LinearGradientBrush>
										</Setter.Value>
									</Setter>
									<Setter Property="BorderBrush" Value="#FF848484"/>
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type Chromes:ButtonChrome}">
												<Border x:Name="OuterBorder" 
													BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
													Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}"
													>
													<VisualStateManager.VisualStateGroups>
														<VisualStateGroup x:Name="CommonStates">
															<VisualState x:Name="Disabled">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFE0E0E0"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF989898"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFE0E0E0"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Normal"/>
															<VisualState x:Name="Highlighted">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="#FFFFFBA3" Offset="1"/>
																					<GradientStop Color="#FFFFFBDA"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Selected">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedHighlighted">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFFFC92B"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="NormalVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="#FFF6F6F6" Offset="0"/>
																					<GradientStop Color="#FFD2D2D2" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="HighlightedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="#FFFFFBA3" Offset="1"/>
																					<GradientStop Color="#FFFFFBDA"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedHighlightedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFFFC92B"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
														</VisualStateGroup>
													</VisualStateManager.VisualStateGroups>
													<Border x:Name="InnerBorder" 
														BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" 
														CornerRadius="{TemplateBinding InnerCornerRadius}"
														/>
												</Border>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</Chromes:ButtonChrome.Style>
						</Chromes:ButtonChrome>
						<Primitives:TabItemContentPresenter x:Name="HeaderElement" 
							ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" 
							HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
							Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
							/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="LeftTemplate">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:RadPane}">
					<Grid x:Name="wrapper">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation BeginTime="0" To="0.33" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HeaderElement"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver"/>
								<VisualState x:Name="Selected">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ChromePinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="PinnedStates">
								<VisualState x:Name="Unpinned">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ChromeUnpinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pinned">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ChromePinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="PlacementStates">
								<VisualState x:Name="HorizontalLeft"/>
								<VisualState x:Name="HorizontalRight"/>
								<VisualState x:Name="HorizontalTop">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="wrapper">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0,0,-1,4</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="HeaderElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>6,3</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="HorizontalBottom">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="wrapper">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0,4,-1,0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="HeaderElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>6,3</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="VerticalLeft">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="wrapper">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0,0,4,-1</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="HeaderElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>3,6</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Orientation" Storyboard.TargetName="ChromeUnpinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Orientation>Vertical</Orientation>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Orientation" Storyboard.TargetName="ChromePinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Orientation>Vertical</Orientation>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="VerticalRight">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="wrapper">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>4,0,0,-1</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="HeaderElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>3,6</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Orientation" Storyboard.TargetName="ChromeUnpinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Orientation>Vertical</Orientation>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Orientation" Storyboard.TargetName="ChromePinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Orientation>Vertical</Orientation>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="VerticalTop"/>
								<VisualState x:Name="VerticalBottom"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Chromes:ButtonChrome x:Name="ChromeUnpinned" 
							BorderThickness="1" CornerRadius="2" 
							RenderSelected="{TemplateBinding IsSelected}" 
							RenderHighlighted="{TemplateBinding IsMouseOver}" Visibility="Collapsed"
							>
							<Chromes:ButtonChrome.Style>
								<Style TargetType="{x:Type Chromes:ButtonChrome}">
									<Setter Property="Background">
										<Setter.Value>
											<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
												<GradientStop Color="#FFF6F6F6" Offset="0"/>
												<GradientStop Color="#FFD2D2D2" Offset="1"/>
											</LinearGradientBrush>
										</Setter.Value>
									</Setter>
									<Setter Property="BorderBrush" Value="#FF848484"/>
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type Chromes:ButtonChrome}">
												<Border x:Name="OuterBorder" 
													BorderBrush="{TemplateBinding BorderBrush}" 
													BorderThickness="{TemplateBinding BorderThickness}" 
													Background="{TemplateBinding Background}" 
													CornerRadius="{TemplateBinding CornerRadius}"
													>
													<VisualStateManager.VisualStateGroups>
														<VisualStateGroup x:Name="CommonStates">
															<VisualState x:Name="Disabled">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFE0E0E0"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF989898"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFE0E0E0"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Normal"/>
															<VisualState x:Name="Highlighted">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="#FFFFFBA3" Offset="1"/>
																					<GradientStop Color="#FFFFFBDA"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Selected">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedHighlighted">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFFFC92B"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="NormalVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="#FFF6F6F6" Offset="0"/>
																					<GradientStop Color="#FFD2D2D2" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="HighlightedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="#FFFFFBA3" Offset="1"/>
																					<GradientStop Color="#FFFFFBDA"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedHighlightedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFFFC92B"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
														</VisualStateGroup>
													</VisualStateManager.VisualStateGroups>
													<Border x:Name="InnerBorder" 
														BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" 
														CornerRadius="{TemplateBinding InnerCornerRadius}"
														/>
												</Border>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</Chromes:ButtonChrome.Style>
						</Chromes:ButtonChrome>
						<Chromes:ButtonChrome x:Name="ChromePinned" 
							BorderThickness="1,0,1,1" CornerRadius="0,0,2,2" Margin="0,1,0,0" 
							RenderSelected="{TemplateBinding IsSelected}" 
							RenderHighlighted="{TemplateBinding IsMouseOver}" Visibility="Collapsed"
							>
							<Chromes:ButtonChrome.Style>
								<Style TargetType="{x:Type Chromes:ButtonChrome}">
									<Setter Property="Background">
										<Setter.Value>
											<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
												<GradientStop Color="#FFF6F6F6" Offset="0"/>
												<GradientStop Color="#FFD2D2D2" Offset="1"/>
											</LinearGradientBrush>
										</Setter.Value>
									</Setter>
									<Setter Property="BorderBrush" Value="#FF848484"/>
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type Chromes:ButtonChrome}">
												<Border x:Name="OuterBorder" 
													BorderBrush="{TemplateBinding BorderBrush}" 
													BorderThickness="{TemplateBinding BorderThickness}" 
													Background="{TemplateBinding Background}" 
													CornerRadius="{TemplateBinding CornerRadius}"
													>
													<VisualStateManager.VisualStateGroups>
														<VisualStateGroup x:Name="CommonStates">
															<VisualState x:Name="Disabled">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFE0E0E0"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF989898"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFE0E0E0"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Normal"/>
															<VisualState x:Name="Highlighted">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="#FFFFFBA3" Offset="1"/>
																					<GradientStop Color="#FFFFFBDA"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Selected">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedHighlighted">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFFFC92B"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="NormalVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="#FFF6F6F6" Offset="0"/>
																					<GradientStop Color="#FFD2D2D2" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="HighlightedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="#FFFFFBA3" Offset="1"/>
																					<GradientStop Color="#FFFFFBDA"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedHighlightedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFFFC92B"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
														</VisualStateGroup>
													</VisualStateManager.VisualStateGroups>
													<Border x:Name="InnerBorder" 
														BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" 
														CornerRadius="{TemplateBinding InnerCornerRadius}"
														/>
												</Border>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</Chromes:ButtonChrome.Style>
						</Chromes:ButtonChrome>
						<Primitives:TabItemContentPresenter x:Name="HeaderElement" 
							ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" 
							HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
							Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
							/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="TopTemplate">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:RadPane}">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation BeginTime="0" To="0.33" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HeaderElement"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver"/>
								<VisualState x:Name="Selected">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="Chrome">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0,-2,0,-1</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DisplayMode">
								<VisualState x:Name="Grouped"/>
								<VisualState x:Name="StandAlone">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="StandAloneContent">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.RowSpan)" Storyboard.TargetName="wrapper">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Int32>1</System:Int32>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="HorizontalAlignment" Storyboard.TargetName="wrapper">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<HorizontalAlignment>Left</HorizontalAlignment>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="wrapper" Margin="0,0,-1,0" Grid.RowSpan="2">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<Chromes:ButtonChrome x:Name="Chrome" Grid.ColumnSpan="2"
								BorderThickness="0"  CornerRadius="2,2,0,0" Margin="0" 
								RenderSelected="{TemplateBinding IsSelected}" RenderHighlighted="{TemplateBinding IsMouseOver}" 
								RenderEnabled="{TemplateBinding IsEnabled}" Background="{x:Null}" BorderBrush="{x:Null}"
								>
								<Chromes:ButtonChrome.Style>
									<Style TargetType="{x:Type Chromes:ButtonChrome}">
										<Setter Property="Background">
											<Setter.Value>
												<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
													<GradientStop Color="#FFF6F6F6" Offset="0"/>
													<GradientStop Color="#FFD2D2D2" Offset="1"/>
												</LinearGradientBrush>
											</Setter.Value>
										</Setter>
										<Setter Property="BorderBrush" Value="#FF848484"/>
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type Chromes:ButtonChrome}">
													<Border x:Name="OuterBorder" 
														BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
														Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}"
														>
														<VisualStateManager.VisualStateGroups>
															<VisualStateGroup x:Name="CommonStates">
																<VisualState x:Name="Disabled">
																	<Storyboard>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="#FFE0E0E0"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="#FF989898"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="#FFE0E0E0"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Normal"/>
																<VisualState x:Name="Highlighted">
																	<Storyboard>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="White"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="#FF848484"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																						<GradientStop Color="#FFFFFBA3" Offset="1"/>
																						<GradientStop Color="#FFFFFBDA"/>
																					</LinearGradientBrush>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Selected">
																	<Storyboard>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="White"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="#FF848484"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																						<GradientStop Color="White"/>
																						<GradientStop Color="#FFFAFAFA" Offset="1"/>
																					</LinearGradientBrush>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="SelectedHighlighted">
																	<Storyboard>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="White"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="#FFFFC92B"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																						<GradientStop Color="White"/>
																						<GradientStop Color="#FFFAFAFA" Offset="1"/>
																					</LinearGradientBrush>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="NormalVertical">
																	<Storyboard>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="White"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="#FF848484"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																						<GradientStop Color="#FFF6F6F6" Offset="0"/>
																						<GradientStop Color="#FFD2D2D2" Offset="1"/>
																					</LinearGradientBrush>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="HighlightedVertical">
																	<Storyboard>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="White"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="#FF848484"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																						<GradientStop Color="#FFFFFBA3" Offset="1"/>
																						<GradientStop Color="#FFFFFBDA"/>
																					</LinearGradientBrush>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="SelectedVertical">
																	<Storyboard>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="White"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="#FF848484"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																						<GradientStop Color="White"/>
																						<GradientStop Color="#FFFAFAFA" Offset="1"/>
																					</LinearGradientBrush>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="SelectedHighlightedVertical">
																	<Storyboard>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="White"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<SolidColorBrush Color="#FFFFC92B"/>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																			<DiscreteObjectKeyFrame KeyTime="0">
																				<DiscreteObjectKeyFrame.Value>
																					<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																						<GradientStop Color="White"/>
																						<GradientStop Color="#FFFAFAFA" Offset="1"/>
																					</LinearGradientBrush>
																				</DiscreteObjectKeyFrame.Value>
																			</DiscreteObjectKeyFrame>
																		</ObjectAnimationUsingKeyFrames>
																	</Storyboard>
																</VisualState>
															</VisualStateGroup>
														</VisualStateManager.VisualStateGroups>
														<Border x:Name="InnerBorder" 
															BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" 
															CornerRadius="{TemplateBinding InnerCornerRadius}"
															/>
													</Border>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</Chromes:ButtonChrome.Style>
							</Chromes:ButtonChrome>
							<telerik:RadButton x:Name="HeaderCloseButton" 
								Grid.Column="1" Command="telerik:RadDockingCommands.Close" Height="16" 
								IsBackgroundVisible="False" InnerCornerRadius="0" Margin="0,0,3,0" 
								VerticalAlignment="Center" Width="16"
								>
								<telerik:RadButton.Visibility>
									<Binding Path="IsEnabled" RelativeSource="{RelativeSource Self}">
										<Binding.Converter>
											<telerik:BooleanToVisibilityConverter/>
										</Binding.Converter>
									</Binding>
								</telerik:RadButton.Visibility>
								<Path x:Name="BackgroundIcon" 
									Data="M0,0L2,0 2,1 3,1 3,2 5,2 5,1 6,1 6,0 8,0 8,1 7,1 7,2 6,2 6,3 5,3 5,4 6,4 6,5 6,5 7,5 7,6 8,6 8,7 6,7 6,6 5,6 5,5 3,5 3,6 2,6 2,7 0,7 0,6 1,6 1,5 2,5 2,4 3,4 3,3 2,3 2,2 1,2 1,1 0,1z" 
									Fill="Black" Height="7" Width="8"
									/>
							</telerik:RadButton>
							<Primitives:TabItemContentPresenter x:Name="HeaderElement" 
								ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" 
								HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
								Margin="6,3,6,2" Padding="{TemplateBinding Padding}" 
								VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
								/>
						</Grid>
						<Border x:Name="StandAloneContent" 
							BorderBrush="#FF848484" BorderThickness="0,1,0,0" 
							Background="White" Grid.Row="1" Visibility="Collapsed"
							>
							<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" 
								Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"
								/>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="RightTemplate">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:RadPane}">
					<Grid x:Name="wrapper">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation BeginTime="0" To="0.33" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HeaderElement"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver"/>
								<VisualState x:Name="Selected">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ChromePinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="PinnedStates">
								<VisualState x:Name="Unpinned">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ChromeUnpinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pinned">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ChromePinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="PlacementStates">
								<VisualState x:Name="HorizontalLeft"/>
								<VisualState x:Name="HorizontalRight"/>
								<VisualState x:Name="HorizontalTop">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="wrapper">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0,0,-1,4</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="HeaderElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>6,3</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="HorizontalBottom">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="wrapper">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0,4,-1,0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="HeaderElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>6,3</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="VerticalLeft">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="wrapper">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0,0,4,-1</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="HeaderElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>3,6</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Orientation" Storyboard.TargetName="ChromeUnpinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Orientation>Vertical</Orientation>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Orientation" Storyboard.TargetName="ChromePinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Orientation>Vertical</Orientation>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="VerticalRight">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="wrapper">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>4,0,0,-1</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="HeaderElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>3,6</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Orientation" Storyboard.TargetName="ChromeUnpinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Orientation>Vertical</Orientation>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Orientation" Storyboard.TargetName="ChromePinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Orientation>Vertical</Orientation>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="VerticalTop"/>
								<VisualState x:Name="VerticalBottom"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Chromes:ButtonChrome x:Name="ChromeUnpinned" 
							BorderThickness="1" CornerRadius="2" RenderSelected="{TemplateBinding IsSelected}" 
							RenderHighlighted="{TemplateBinding IsMouseOver}" Visibility="Collapsed"
							>
							<Chromes:ButtonChrome.Style>
								<Style TargetType="{x:Type Chromes:ButtonChrome}">
									<Setter Property="Background">
										<Setter.Value>
											<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
												<GradientStop Color="#FFF6F6F6" Offset="0"/>
												<GradientStop Color="#FFD2D2D2" Offset="1"/>
											</LinearGradientBrush>
										</Setter.Value>
									</Setter>
									<Setter Property="BorderBrush" Value="#FF848484"/>
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type Chromes:ButtonChrome}">
												<Border x:Name="OuterBorder" 
													BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
													Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}"
													>
													<VisualStateManager.VisualStateGroups>
														<VisualStateGroup x:Name="CommonStates">
															<VisualState x:Name="Disabled">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFE0E0E0"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF989898"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFE0E0E0"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Normal"/>
															<VisualState x:Name="Highlighted">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="#FFFFFBA3" Offset="1"/>
																					<GradientStop Color="#FFFFFBDA"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Selected">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedHighlighted">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFFFC92B"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="NormalVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="#FFF6F6F6" Offset="0"/>
																					<GradientStop Color="#FFD2D2D2" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="HighlightedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="#FFFFFBA3" Offset="1"/>
																					<GradientStop Color="#FFFFFBDA"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedHighlightedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFFFC92B"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
														</VisualStateGroup>
													</VisualStateManager.VisualStateGroups>
													<Border x:Name="InnerBorder" 
														BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" 
														CornerRadius="{TemplateBinding InnerCornerRadius}"
														/>
												</Border>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</Chromes:ButtonChrome.Style>
						</Chromes:ButtonChrome>
						<Chromes:ButtonChrome x:Name="ChromePinned" 
							BorderThickness="1,0,1,1" CornerRadius="0,0,2,2" Margin="0,1,0,0" 
							RenderSelected="{TemplateBinding IsSelected}" 
							RenderHighlighted="{TemplateBinding IsMouseOver}" Visibility="Collapsed"
							>
							<Chromes:ButtonChrome.Style>
								<Style TargetType="{x:Type Chromes:ButtonChrome}">
									<Setter Property="Background">
										<Setter.Value>
											<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
												<GradientStop Color="#FFF6F6F6" Offset="0"/>
												<GradientStop Color="#FFD2D2D2" Offset="1"/>
											</LinearGradientBrush>
										</Setter.Value>
									</Setter>
									<Setter Property="BorderBrush" Value="#FF848484"/>
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type Chromes:ButtonChrome}">
												<Border x:Name="OuterBorder" 
													BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
													Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}"
													>
													<VisualStateManager.VisualStateGroups>
														<VisualStateGroup x:Name="CommonStates">
															<VisualState x:Name="Disabled">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFE0E0E0"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF989898"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFE0E0E0"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Normal"/>
															<VisualState x:Name="Highlighted">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="#FFFFFBA3" Offset="1"/>
																					<GradientStop Color="#FFFFFBDA"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Selected">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedHighlighted">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFFFC92B"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="NormalVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="#FFF6F6F6" Offset="0"/>
																					<GradientStop Color="#FFD2D2D2" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="HighlightedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="#FFFFFBA3" Offset="1"/>
																					<GradientStop Color="#FFFFFBDA"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedHighlightedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFFFC92B"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
														</VisualStateGroup>
													</VisualStateManager.VisualStateGroups>
													<Border x:Name="InnerBorder" 
														BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" 
														CornerRadius="{TemplateBinding InnerCornerRadius}"
														/>
												</Border>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</Chromes:ButtonChrome.Style>
						</Chromes:ButtonChrome>
						<Primitives:TabItemContentPresenter x:Name="HeaderElement" 
							ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" 
							HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
							Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
							/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="BottomTemplate">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:RadPane}">
					<Grid x:Name="wrapper" Margin="0,4,-1,0">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation BeginTime="0" To="0.33" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HeaderElement"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver"/>
								<VisualState x:Name="Selected">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ChromePinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="PinnedStates">
								<VisualState x:Name="Unpinned">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ChromeUnpinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pinned">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ChromePinned">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentBorder">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0,0,0,2</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Chromes:ButtonChrome x:Name="ChromeUnpinned" 
							BorderThickness="1" CornerRadius="2" RenderSelected="{TemplateBinding IsSelected}" 
							RenderHighlighted="{TemplateBinding IsMouseOver}" Visibility="Collapsed"
							>
							<Chromes:ButtonChrome.Style>
								<Style TargetType="{x:Type Chromes:ButtonChrome}">
									<Setter Property="Background">
										<Setter.Value>
											<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
												<GradientStop Color="#FFF6F6F6" Offset="0"/>
												<GradientStop Color="#FFD2D2D2" Offset="1"/>
											</LinearGradientBrush>
										</Setter.Value>
									</Setter>
									<Setter Property="BorderBrush" Value="#FF848484"/>
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type Chromes:ButtonChrome}">
												<Border x:Name="OuterBorder" 
													BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
													Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}"
													>
													<VisualStateManager.VisualStateGroups>
														<VisualStateGroup x:Name="CommonStates">
															<VisualState x:Name="Disabled">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFE0E0E0"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF989898"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFE0E0E0"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Normal"/>
															<VisualState x:Name="Highlighted">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="#FFFFFBA3" Offset="1"/>
																					<GradientStop Color="#FFFFFBDA"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Selected">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedHighlighted">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFFFC92B"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="NormalVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="#FFF6F6F6" Offset="0"/>
																					<GradientStop Color="#FFD2D2D2" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="HighlightedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="#FFFFFBA3" Offset="1"/>
																					<GradientStop Color="#FFFFFBDA"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedHighlightedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFFFC92B"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
														</VisualStateGroup>
													</VisualStateManager.VisualStateGroups>
													<Border x:Name="InnerBorder" 
														BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}"
														CornerRadius="{TemplateBinding InnerCornerRadius}"
														/>
												</Border>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</Chromes:ButtonChrome.Style>
						</Chromes:ButtonChrome>
						<Chromes:ButtonChrome x:Name="ChromePinned" 
							BorderThickness="1,0,1,1" CornerRadius="0,0,2,2" Margin="0,1,0,2" Visibility="Collapsed"
							RenderHighlighted="{TemplateBinding IsMouseOver}" RenderSelected="{TemplateBinding IsSelected}" 
							>
							<Chromes:ButtonChrome.Style>
								<Style TargetType="{x:Type Chromes:ButtonChrome}">
									<Setter Property="Background">
										<Setter.Value>
											<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
												<GradientStop Color="#FFF6F6F6" Offset="0"/>
												<GradientStop Color="#FFD2D2D2" Offset="1"/>
											</LinearGradientBrush>
										</Setter.Value>
									</Setter>
									<Setter Property="BorderBrush" Value="#FF848484"/>
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type Chromes:ButtonChrome}">
												<Border x:Name="OuterBorder" 
													BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
													Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}"
													>
													<VisualStateManager.VisualStateGroups>
														<VisualStateGroup x:Name="CommonStates">
															<VisualState x:Name="Disabled">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFE0E0E0"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF989898"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFE0E0E0"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Normal"/>
															<VisualState x:Name="Highlighted">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="#FFFFFBA3" Offset="1"/>
																					<GradientStop Color="#FFFFFBDA"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Selected">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedHighlighted">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFFFC92B"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="NormalVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="#FFF6F6F6" Offset="0"/>
																					<GradientStop Color="#FFD2D2D2" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="HighlightedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="#FFFFFBA3" Offset="1"/>
																					<GradientStop Color="#FFFFFBDA"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedHighlightedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFFFC92B"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
														</VisualStateGroup>
													</VisualStateManager.VisualStateGroups>
													<Border x:Name="InnerBorder" 
														BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" 
														CornerRadius="{TemplateBinding InnerCornerRadius}"
														/>
												</Border>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</Chromes:ButtonChrome.Style>
						</Chromes:ButtonChrome>
						<Border x:Name="ContentBorder">
							<Primitives:TabItemContentPresenter x:Name="HeaderElement" 
								ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" 
								HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="6,3" 
								Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
								/>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="DocumentHostTemplate">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type telerik:RadPane}">
					<Grid x:Name="wrapper" Margin="0,0,-1,0">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation BeginTime="0" To="0.33" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HeaderElement"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver"/>
								<VisualState x:Name="Selected">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="Chrome">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>0,-2,0,-1</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Chromes:ButtonChrome x:Name="Chrome" 
							BorderThickness="1,1,1,0" Grid.ColumnSpan="2" CornerRadius="2,2,0,0" Margin="0" 
							RenderSelected="{TemplateBinding IsSelected}" RenderHighlighted="{TemplateBinding IsMouseOver}" RenderEnabled="{TemplateBinding IsEnabled}"
							>
							<Chromes:ButtonChrome.Style>
								<Style TargetType="{x:Type Chromes:ButtonChrome}">
									<Setter Property="Background">
										<Setter.Value>
											<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
												<GradientStop Color="#FFF6F6F6" Offset="0"/>
												<GradientStop Color="#FFD2D2D2" Offset="1"/>
											</LinearGradientBrush>
										</Setter.Value>
									</Setter>
									<Setter Property="BorderBrush" Value="#FF848484"/>
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type Chromes:ButtonChrome}">
												<Border x:Name="OuterBorder" 
													BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
													Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}"
													>
													<VisualStateManager.VisualStateGroups>
														<VisualStateGroup x:Name="CommonStates">
															<VisualState x:Name="Disabled">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFE0E0E0"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF989898"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFE0E0E0"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Normal"/>
															<VisualState x:Name="Highlighted">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="#FFFFFBA3" Offset="1"/>
																					<GradientStop Color="#FFFFFBDA"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Selected">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedHighlighted">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFFFC92B"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="NormalVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="#FFF6F6F6" Offset="0"/>
																					<GradientStop Color="#FFD2D2D2" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="HighlightedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="#FFFFFBA3" Offset="1"/>
																					<GradientStop Color="#FFFFFBDA"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FF848484"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="SelectedHighlightedVertical">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="InnerBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="White"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<SolidColorBrush Color="#FFFFC92B"/>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="OuterBorder">
																		<DiscreteObjectKeyFrame KeyTime="0">
																			<DiscreteObjectKeyFrame.Value>
																				<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																					<GradientStop Color="White"/>
																					<GradientStop Color="#FFFAFAFA" Offset="1"/>
																				</LinearGradientBrush>
																			</DiscreteObjectKeyFrame.Value>
																		</DiscreteObjectKeyFrame>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
														</VisualStateGroup>
													</VisualStateManager.VisualStateGroups>
													<Border x:Name="InnerBorder" 
														BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" 
														CornerRadius="{TemplateBinding InnerCornerRadius}"
														/>
												</Border>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</Chromes:ButtonChrome.Style>
						</Chromes:ButtonChrome>
						<telerik:RadButton x:Name="HeaderCloseButton" Grid.Column="1" 
							Command="telerik:RadDockingCommands.Close" Height="16" IsBackgroundVisible="False" 
							InnerCornerRadius="0" Margin="0,0,3,0" VerticalAlignment="Center" Width="16"
							>
							<telerik:RadButton.Visibility>
								<Binding Path="IsEnabled" RelativeSource="{RelativeSource Self}">
									<Binding.Converter>
										<telerik:BooleanToVisibilityConverter/>
									</Binding.Converter>
								</Binding>
							</telerik:RadButton.Visibility>
							<Path x:Name="BackgroundIcon" 
							Data="M0,0L2,0 2,1 3,1 3,2 5,2 5,1 6,1 6,0 8,0 8,1 7,1 7,2 6,2 6,3 5,3 5,4 6,4 6,5 6,5 7,5 7,6 8,6 8,7 6,7 6,6 5,6 5,5 3,5 3,6 2,6 2,7 0,7 0,6 1,6 1,5 2,5 2,4 3,4 3,3 2,3 2,2 1,2 1,1 0,1z" 
							Fill="Black" Height="7" Width="8"
							/>
						</telerik:RadButton>
						<Primitives:TabItemContentPresenter x:Name="HeaderElement" 
							ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" 
							HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="6,3,6,2" 
							Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
							/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{x:Null}"/>
		<Setter Property="Background" Value="{x:Null}"/>
		<Setter Property="Foreground" Value="Black"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="ContextMenuTemplate">
			<Setter.Value>
				<DataTemplate>
					<telerik:RadContextMenu ClickToOpen="True" InheritDataContext="False">
						<telerik:StyleManager.Theme>
							<telerik:Office_BlackTheme/>
						</telerik:StyleManager.Theme>
						<telerik:RadMenuItem CommandTarget="{Binding}" 
							CommandParameter="{Binding}" Command="telerik:RadDockingCommands.Floating" 
							Header="{Binding Command.Text, RelativeSource={RelativeSource Self}}" 
							IsChecked="{Binding IsFloatingOnly}"
							/>
						<telerik:RadMenuItem CommandTarget="{Binding}" 
							CommandParameter="{Binding}" Command="telerik:RadDockingCommands.Dockable" 
							Header="{Binding Command.Text, RelativeSource={RelativeSource Self}}" 
							IsChecked="{Binding IsDockableOptionChecked}"
							/>
						<telerik:RadMenuItem CommandTarget="{Binding}" 
							CommandParameter="{Binding}" Command="telerik:RadDockingCommands.TabbedDocument" 
							Header="{Binding Command.Text, RelativeSource={RelativeSource Self}}" 
							IsChecked="{Binding IsInDocumentHost}"
							/>
						<telerik:RadMenuItem CommandTarget="{Binding}" 
							CommandParameter="{Binding}" Command="telerik:RadDockingCommands.Pin" 
							Header="{Binding Command.Text, RelativeSource={RelativeSource Self}}"
							>
							<telerik:RadMenuItem.IsChecked>
								<Binding Path="IsPinned">
									<Binding.Converter>
										<telerik:InvertedBooleanConverter/>
									</Binding.Converter>
								</Binding>
							</telerik:RadMenuItem.IsChecked>
						</telerik:RadMenuItem>
						<telerik:RadMenuItem CommandTarget="{Binding}" 
							CommandParameter="{Binding}" Command="telerik:RadDockingCommands.Close" 
							Header="{Binding Command.Text, RelativeSource={RelativeSource Self}}" IsChecked="{Binding IsHidden}"
							/>
					</telerik:RadContextMenu>
				</DataTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="userTextBoxStyle" BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
		<Setter Property="Foreground" Value="Black"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Width" Value="440"/>
		<Setter Property="Height" Value="25"/>
		<Setter Property="FontSize" Value="{DynamicResource DefaultTextSize}"/>
		<Setter Property="FontStyle" Value="Normal"/>
		<Setter Property="FontFamily" Value="{DynamicResource APLDefault}"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Margin" Value="1"/>
		<Setter Property="AllowDrop" Value="true"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<Border x:Name="OuterBorder" BorderBrush="Black" BorderThickness="1" CornerRadius="2">
						<Border x:Name="InnerBorder" 
							Background="{DynamicResource ButtonNormalBackground}" 
							BorderBrush="#33000000" CornerRadius="2"
							>
							<Grid>
								<Label x:Name="TextBoxLabel" 
									Content="User Name" FontSize="{DynamicResource DefaultLabelSize}" 
									VerticalAlignment="Center" Margin="2,0,0,0" 
									FontFamily="{DynamicResource APLDefault}" Foreground="#59808080" Padding="0"/>
								<ScrollViewer SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" x:Name="PART_ContentHost"/>
							</Grid>
						</Border>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsFocused" Value="True">
							<Setter Property="Visibility" TargetName="TextBoxLabel" Value="Hidden"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="{DynamicResource ButtonNormalBackground}"/>
		<Setter Property="Text" Value=""/>
	</Style>

<Style x:Key="PasswordBoxStyle" BasedOn="{x:Null}" TargetType="{x:Type PasswordBox}">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="440"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="FontSize" Value="{DynamicResource DefaultTextSize}"/>
        <Setter Property="FontStyle" Value="Normal"/>
		<Setter Property="FontFamily" Value="{DynamicResource APLDefault}"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="OuterBorder" 
						BorderBrush="Black" BorderThickness="1" CornerRadius="2"
						>
                        <Border x:Name="InnerBorder" 
							Background="{DynamicResource ButtonNormalBackground}" 
							BorderBrush="#33000000" CornerRadius="2"
							>
                            <Grid>
                                <Label x:Name="PasswordBoxLabel" 
									Content="Password" FontSize="{DynamicResource DefaultLabelSize}" 
									VerticalAlignment="Center" Margin="2,0,0,0" 
									FontFamily="{DynamicResource APLDefault}" Foreground="#59808080" Padding="0"/>
                                <ScrollViewer x:Name="PART_ContentHost" 
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
									/>
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Visibility" TargetName="PasswordBoxLabel" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{DynamicResource ButtonNormalBackground}"/>
    </Style>
<Style x:Key="NewPasswordBoxStyle" BasedOn="{x:Null}" TargetType="{x:Type PasswordBox}">
	<Setter Property="Foreground" Value="Black"/>
	<Setter Property="HorizontalAlignment" Value="Center"/>
	<Setter Property="VerticalContentAlignment" Value="Center"/>
	<Setter Property="Width" Value="160"/>
	<Setter Property="Height" Value="22"/>
	<Setter Property="FontSize" Value="{DynamicResource DefaultTextSize}"/>
	<Setter Property="FontStyle" Value="Normal"/>
	<Setter Property="FontFamily" Value="{DynamicResource APLDefault}"/>
	<Setter Property="Padding" Value="1"/>
	<Setter Property="Margin" Value="1"/>
	<Setter Property="AllowDrop" Value="true"/>
	<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
	<Setter Property="Template">
		<Setter.Value>
			<ControlTemplate TargetType="{x:Type PasswordBox}">
				<Border x:Name="OuterBorder" 
					BorderBrush="Black" BorderThickness="1" CornerRadius="2"
					>
					<Border x:Name="InnerBorder" 
						Background="{DynamicResource ButtonNormalBackground}" 
						BorderBrush="#33000000" CornerRadius="2"
						>
						<Grid>
							<Label x:Name="NewPasswordBoxLabel" 
								Content="New Password" FontSize="{DynamicResource DefaultLabelSize}" 
								VerticalAlignment="Center" Margin="2,0,0,0" 
								FontFamily="{DynamicResource APLDefault}" Foreground="#59808080" Padding="0"/>
							<ScrollViewer x:Name="PART_ContentHost" 
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
								/>
						</Grid>
					</Border>
				</Border>
				<ControlTemplate.Triggers>
					<Trigger Property="IsFocused" Value="True">
						<Setter Property="Visibility" TargetName="NewPasswordBoxLabel" Value="Hidden"/>
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>
		</Setter.Value>
	</Setter>
	<Setter Property="Background" Value="{DynamicResource ButtonNormalBackground}"/>
</Style>
<Style x:Key="VerifyPasswordBoxStyle" BasedOn="{x:Null}" TargetType="{x:Type PasswordBox}">
	<Setter Property="Foreground" Value="Black"/>
	<Setter Property="HorizontalAlignment" Value="Center"/>
	<Setter Property="VerticalContentAlignment" Value="Center"/>
	<Setter Property="Width" Value="160"/>
	<Setter Property="Height" Value="22"/>
	<Setter Property="FontSize" Value="{DynamicResource DefaultTextSize}"/>
	<Setter Property="FontStyle" Value="Normal"/>
	<Setter Property="FontFamily" Value="{DynamicResource APLDefault}"/>
	<Setter Property="Padding" Value="1"/>
	<Setter Property="Margin" Value="1"/>
	<Setter Property="AllowDrop" Value="true"/>
	<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
	<Setter Property="Template">
		<Setter.Value>
			<ControlTemplate TargetType="{x:Type PasswordBox}">
				<Border x:Name="OuterBorder" 
					BorderBrush="Black" BorderThickness="1,1,1,1" CornerRadius="2"
					>
					<Border x:Name="InnerBorder" 
						Background="{DynamicResource ButtonNormalBackground}" 
						BorderBrush="#33000000" CornerRadius="2"
						>
						<Grid>
							<Label x:Name="VerifyPasswordBoxLabel" 
								Content="Verify Password" FontSize="{DynamicResource DefaultLabelSize}" 
								VerticalAlignment="Center" Margin="2,0,0,0" 
								FontFamily="{DynamicResource APLDefault}" Foreground="#59808080" Padding="0"/>
							<ScrollViewer x:Name="PART_ContentHost"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
								/>
						</Grid>
					</Border>
				</Border>
				<ControlTemplate.Triggers>
					<Trigger Property="IsFocused" Value="True">
						<Setter Property="Visibility" TargetName="VerifyPasswordBoxLabel" Value="Hidden"/>
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>
		</Setter.Value>
	</Setter>
	<Setter Property="Background" Value="{x:Null}"/>
	<Setter Property="BorderBrush" Value="{x:Null}"/>
</Style>
<Style x:Key="ExplorerExpanderStyle" TargetType="{x:Type Expander}">

	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
	<Setter Property="Background" Value="{x:Null}"/>
	<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
	<Setter Property="VerticalContentAlignment" Value="Stretch"/>
	<Setter Property="BorderBrush" Value="Transparent"/>
	<Setter Property="BorderThickness" Value="2"/>
	<Setter Property="FontSize" Value="{DynamicResource DefaultHeaderSize}"/>
	<Setter Property="Template">
		<Setter.Value>
			<ControlTemplate TargetType="{x:Type Expander}">
				<Grid SnapsToDevicePixels="true" >
					<DockPanel Margin="1,0,1,2">
						<ToggleButton x:Name="HeaderSite" 
							ContentTemplate="{TemplateBinding HeaderTemplate}" 
							ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" 
							Content="{TemplateBinding Header}" DockPanel.Dock="Top" 
							FontSize="{DynamicResource DefaultHeaderSize}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" 
							FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" 
							Foreground="{Binding DataContext.UserSettings.TextBrush,
							RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type views:MainView}},
							UpdateSourceTrigger=PropertyChanged}" 
							FontFamily="{DynamicResource APLDefault}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
							IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
							Padding="{TemplateBinding Padding}" Style="{DynamicResource ExplorerToggleButtonStyle}" 
							VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
							Background="{x:Null}" Height="30" BorderBrush="{x:Null}" Margin="1,0"							
                            />
						<ContentPresenter x:Name="ExpandSite" 
							DockPanel.Dock="Bottom" Focusable="false" 
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
							Margin="{TemplateBinding Padding}" Visibility="Collapsed" 
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							/>
					</DockPanel>
					<Rectangle HorizontalAlignment="Stretch" Height="Auto" Stroke="{Binding DataContext.UserSettings.BorderBrush,
						RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type views:MainView}},
						UpdateSourceTrigger=PropertyChanged}" 
						VerticalAlignment="Stretch" Width="Auto" RadiusX="1" RadiusY="1" StrokeThickness=".5">
						
					</Rectangle>
				</Grid>					
				<ControlTemplate.Triggers>
					<Trigger Property="IsExpanded" Value="true">										
						<Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
					</Trigger>
					<Trigger Property="ExpandDirection" Value="Right">
						<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
						<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
						<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}"/>
					</Trigger>
					<Trigger Property="ExpandDirection" Value="Up">
						<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
						<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
						<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
					</Trigger>
					<Trigger Property="ExpandDirection" Value="Left">
						<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
						<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
						<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}"/>
					</Trigger>
					<Trigger Property="IsEnabled" Value="false">
						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>
		</Setter.Value>
	</Setter>
	<Style.Triggers>

		<DataTrigger Binding="{Binding IsActive}" Value="False">
			<Setter Property="BorderBrush" Value="Blue"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Opacity" Value=".5"/>
		</DataTrigger>
	</Style.Triggers>

</Style>

<Style x:Key="ExplorerToggleButtonStyle" TargetType="{x:Type ToggleButton}">
	<Setter Property="Template">
		<Setter.Value>
			<ControlTemplate TargetType="{x:Type ToggleButton}">
				<Border >
					<Grid SnapsToDevicePixels="False" Background="{Binding DataContext.UserSettings.BackgroundBrush,
						RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type views:MainView}},
						UpdateSourceTrigger=PropertyChanged}"
						>
						<Ellipse x:Name="circle" 
							Fill="{StaticResource Expander.Static.Circle.Fill}" 
							HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" 
							VerticalAlignment="Center" Width="19" Visibility="Collapsed"
							/>
						<Path x:Name="arrow" 
							Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" 
							SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" 
							StrokeThickness="2" VerticalAlignment="Center" Visibility="Collapsed"
							/>
						<ContentPresenter Grid.Column="0" 
							Margin="8,0,0,0" RecognizesAccessKey="True" 
							SnapsToDevicePixels="True" VerticalAlignment="Center"
							/>
						<Path x:Name="path" 
							Visibility="Collapsed"
							Data="M2,26.625 L69.956782,26.625" 
							HorizontalAlignment="Stretch" Height="4" 
							Stretch="Fill" StrokeThickness="4" VerticalAlignment="Bottom" 
							Margin="-1.375,0,-1.043,0"
							>
							<Path.Stroke>
								<LinearGradientBrush EndPoint="1.053,0.5" MappingMode="RelativeToBoundingBox" StartPoint="-0.041,0.502">
									<GradientStop Color="#FF275F00" Offset="0.036"/>
									<GradientStop Color="White" Offset="1"/>
									<GradientStop Color="White"/>
								</LinearGradientBrush>
							</Path.Stroke>
						</Path>
					</Grid>
				</Border>
				<ControlTemplate.Triggers>
					<Trigger Property="IsChecked" Value="true">
						<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
					</Trigger>
					<Trigger Property="IsMouseOver" Value="true">
						<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
						<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
						<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
					</Trigger>
					<Trigger Property="IsPressed" Value="true">
						<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
						<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
						<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
						<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
					</Trigger>
					<Trigger Property="IsEnabled" Value="false">
						<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
						<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
						<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>
		</Setter.Value>
	</Setter>
</Style>

    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Border x:Name="border" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            CornerRadius="2">
                        <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="35"/>
                            </Grid.ColumnDefinitions>
                            <!--d:LayoutOverrides="GridBox"-->
                            <Popup x:Name="PART_Popup" Grid.ColumnSpan="2"
                                 Margin="1"                               
                                IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" 
                                Placement="Bottom"
                                >
                                <themes:SystemDropShadowChrome 
                                    x:Name="show" Color="Transparent" 
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}" 
                                    MinWidth="{Binding ActualWidth, ElementName=MainGrid}"
                                    >
                                    <Border x:Name="DropDownBorder" 
                                            Background="{DynamicResource DarkBrush}" 
                                            BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" 
                                            BorderThickness="1" CornerRadius="2"
                                            Padding="4" 
                                            >
                                        <ScrollViewer x:Name="DropDownScrollViewer" 
                                                HorizontalContentAlignment="Right" 
                                                ScrollViewer.VerticalScrollBarVisibility="Auto">
                                            <ItemsPresenter x:Name="ItemsPresenter" 
                                                KeyboardNavigation.DirectionalNavigation="Contained" 
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </ScrollViewer>
                                    </Border>
                                </themes:SystemDropShadowChrome>
                            </Popup>
                            <ToggleButton 
                                Background="#00000000" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                Grid.ColumnSpan="2"
                                Style="{DynamicResource BlankToggleButtonGlow}" 
                                />
                            <ContentPresenter
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                                Content="{TemplateBinding SelectionBoxItem}" 
                                ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                                IsHitTestVisible="false" Margin="4,4,0,4" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                />
                            <Ellipse Grid.Column="1" HorizontalAlignment="Left" Width="1" IsHitTestVisible="False" Fill="#19FFFFFF" Margin="0,2"/>
                            <Path Grid.Column="1" Height="7" Stretch="Fill" Width="9" 
                                  Data="M0,0 L15,0 7.7203931,14.8325 z" Fill="{TemplateBinding Foreground}" IsHitTestVisible="False" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                            <Setter Property="Margin" TargetName="show" Value="0,0,5,5"/>
                            <Setter Property="Color" TargetName="show" Value="#71000000"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.25"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{DynamicResource ButtonNormalBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonDefaultForeground}"/>
        <Setter Property="FontFamily" Value="{DynamicResource APLDefault}"/>
        <Setter Property="FontSize" Value="{DynamicResource DefaultTextSize}"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="BorderBrush" Value="Red"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Padding" Value="3"/>
                <Setter Property="Template" Value="{DynamicResource ComboBoxEditableTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" 
						Background="Transparent" Focusable="false" 
						HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
						/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="Placement" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" 
                   Grid.ColumnSpan="2" 
                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" 
                   Placement="Bottom">
                <themes:SystemDropShadowChrome x:Name="show" 
                    Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}"
                    MinWidth="{Binding ActualWidth, ElementName=Placement}"
                    >
                    <Border x:Name="DropDownBorder" 
                            Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                            BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" 
                            BorderThickness="1" 
                            >
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas HorizontalAlignment="Left" VerticalAlignment="Top" 
                                        Height="0" Width="0">
                                    <Rectangle x:Name="OpaqueRect" 
                                        Fill="{Binding Background, ElementName=DropDownBorder}" 
                                        Height="{Binding ActualHeight, ElementName=DropDownBorder}" 
                                        Width="{Binding ActualWidth, ElementName=DropDownBorder}"
                                        />
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" 
                                        KeyboardNavigation.DirectionalNavigation="Contained" 
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </themes:SystemDropShadowChrome>
            </Popup>
            <themes:ListBoxChrome 
                x:Name="Border" Grid.ColumnSpan="2" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" 
                Background="{TemplateBinding Background}" 
                RenderMouseOver="{TemplateBinding IsMouseOver}" 
                RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"
                />
            <TextBox x:Name="PART_EditableTextBox" 
                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                     IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" 
                     Margin="{TemplateBinding Padding}" 
                     Style="{DynamicResource ComboBoxEditableTextBox}" 
                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                     />
            <ToggleButton Grid.Column="1" 
                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                    />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="IsDropDownOpen" Value="true">
                <Setter Property="RenderFocused" TargetName="Border" Value="true"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                <Setter Property="Background" Value="#FFF4F4F4"/>
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="show" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="show" Value="#71000000"/>
            </Trigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
	    <Style x:Key="TreeViewItemFocusVisual">
	    	<Setter Property="Control.Template">
	    		<Setter.Value>
	    			<ControlTemplate>
	    				<Rectangle/>
	    			</ControlTemplate>
	    		</Setter.Value>
	    	</Setter>
	    </Style>
	    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill" Color="#FF595959"/>
	    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#FF262626"/>
	    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="#FF27C7F7"/>
	    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="#FFCCEEFB"/>
	    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#FF1CC4F7"/>
	    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#FF82DFFB"/>
	    <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
	    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="#FFFFFFFF"/>
	    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke" Color="#FF818181"/>
	    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
	    	<Setter Property="Focusable" Value="False"/>
	    	<Setter Property="Width" Value="16"/>
	    	<Setter Property="Height" Value="16"/>
	    	<Setter Property="Template">
	    		<Setter.Value>
	    			<ControlTemplate TargetType="{x:Type ToggleButton}">
	    				<Border Background="Transparent" Height="16" Padding="5,5,5,5" Width="16">
	    					<Path x:Name="ExpandPath" 
								Data="{StaticResource TreeArrow}" Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}" 
								Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}"
								>
	    						<Path.RenderTransform>
	    							<RotateTransform Angle="135" CenterY="3" CenterX="3"/>
	    						</Path.RenderTransform>
	    					</Path>
	    				</Border>
	    				<ControlTemplate.Triggers>
	    					<Trigger Property="IsChecked" Value="True">
	    						<Setter Property="RenderTransform" TargetName="ExpandPath">
	    							<Setter.Value>
	    								<RotateTransform Angle="180" CenterY="3" CenterX="3"/>
	    							</Setter.Value>
	    						</Setter>
	    						<Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}"/>
	    						<Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}"/>
	    					</Trigger>
	    					<Trigger Property="IsMouseOver" Value="True">
	    						<Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}"/>
	    						<Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}"/>
	    					</Trigger>
	    					<MultiTrigger>
	    						<MultiTrigger.Conditions>
	    							<Condition Property="IsMouseOver" Value="True"/>
	    							<Condition Property="IsChecked" Value="True"/>
	    						</MultiTrigger.Conditions>
	    						<Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}"/>
	    						<Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}"/>
	    					</MultiTrigger>
	    				</ControlTemplate.Triggers>
	    			</ControlTemplate>
	    		</Setter.Value>
	    	</Setter>
	    </Style>
	    <Style x:Key="TreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
	    	<Setter Property="Background" Value="Transparent"/>
	    	<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
	    	<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
	    	<Setter Property="Padding" Value="1,0,0,0"/>
	    	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
	    	<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
	    	<Setter Property="Template">
	    		<Setter.Value>
	    			<ControlTemplate TargetType="{x:Type TreeViewItem}">
	    				<Grid>
	    					<Grid.ColumnDefinitions>
	    						<ColumnDefinition MinWidth="19" Width="Auto"/>
	    						<ColumnDefinition Width="Auto"/>
	    						<ColumnDefinition Width="*"/>
	    					</Grid.ColumnDefinitions>
	    					<Grid.RowDefinitions>
	    						<RowDefinition Height="Auto"/>
	    						<RowDefinition/>
	    					</Grid.RowDefinitions>
	    					<VisualStateManager.VisualStateGroups>
	    						<VisualStateGroup x:Name="CommonStates">
	    							<VisualState x:Name="Normal">
	    								<Storyboard/>
	    							</VisualState>
	    							<VisualState x:Name="MouseOver">
	    								<Storyboard>
	    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background)" Storyboard.TargetName="Bd">
	    										<DiscreteObjectKeyFrame KeyTime="0">
	    											<DiscreteObjectKeyFrame.Value>
	    												<SolidColorBrush Color="#4C4A99DA"/>
	    											</DiscreteObjectKeyFrame.Value>
	    										</DiscreteObjectKeyFrame>
	    									</ObjectAnimationUsingKeyFrames>
	    								</Storyboard>
	    							</VisualState>
	    							<VisualState x:Name="Disabled"/>
	    						</VisualStateGroup>
	    					</VisualStateManager.VisualStateGroups>
	    					<ToggleButton x:Name="Expander" 
								ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" 
								Style="{StaticResource ExpandCollapseToggleStyle}"
								/>
	    					<Border x:Name="Bd" Grid.Column="1"
								BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"  
								Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true"
								>
	    						<ContentPresenter x:Name="PART_Header" 
									ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									/>
	    					</Border>
	    					<ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
	    				</Grid>
	    				<ControlTemplate.Triggers>
	    					<Trigger Property="IsExpanded" Value="false">
	    						<Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
	    					</Trigger>
	    					<Trigger Property="HasItems" Value="false">
	    						<Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
	    					</Trigger>
	    					<Trigger Property="IsSelected" Value="true">
	    						<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
	    						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
	    					</Trigger>
	    					<MultiTrigger>
	    						<MultiTrigger.Conditions>
	    							<Condition Property="IsSelected" Value="true"/>
	    							<Condition Property="IsSelectionActive" Value="false"/>
	    						</MultiTrigger.Conditions>
	    						<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
	    						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
	    					</MultiTrigger>
	    					<Trigger Property="IsEnabled" Value="false">
	    						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
	    					</Trigger>
	    				</ControlTemplate.Triggers>
	    			</ControlTemplate>
	    		</Setter.Value>
	    	</Setter>
	    	<Style.Triggers>
	    		<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
	    			<Setter Property="ItemsPanel">
	    				<Setter.Value>
	    					<ItemsPanelTemplate>
	    						<VirtualizingStackPanel/>
	    					</ItemsPanelTemplate>
	    				</Setter.Value>
	    			</Setter>
	    		</Trigger>
	    	</Style.Triggers>
	    </Style>

</ResourceDictionary>