<UserControl x:Class="APLPromoter.UI.Wpf.Views.HomeView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation" 
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:views="clr-namespace:APLPromoter.UI.Wpf.Views"
	xmlns:entity="clr-namespace:APLPromoter.Client.Entity;assembly=APLPromoter.Client.Entity"
    xmlns:vm="clr-namespace:APLPromoter.UI.Wpf.ViewModel"    
	xmlns:Xaml="clr-namespace:ReactiveUI.Xaml;assembly=ReactiveUI.Xaml"
	mc:Ignorable="d" d:DesignHeight="788" d:DesignWidth="800"
	>	
        <UserControl.Resources>
        <DataTemplate x:Key="HomeSteps">
            <Grid x:Name="LayoutRoot" Background="{x:Null}">
                <ToggleButton x:Name="StepButton"
					Style="{DynamicResource StepButtonStyle}"														
                    Command="{Binding DataContext.SelectedViewModel.ChangeStepCommand, 
                            RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type views:MainView}}}"
                    CommandParameter="{Binding}"
					HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
					Width="160" HorizontalContentAlignment="Stretch" 
					VerticalContentAlignment="Stretch" Padding="1" 
					Background="{Binding DataContext.UserSettings.HeaderBrush,
					RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type views:MainView}},
					UpdateSourceTrigger=PropertyChanged}" Margin="6,2,6,6" 
					BorderBrush="{Binding DataContext.UserSettings.BorderBrush,
					RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type views:MainView}},
					UpdateSourceTrigger=PropertyChanged}" BorderThickness="1"
					>
                    <Grid>
                        <TextBlock x:Name="StepName" 
							TextWrapping="Wrap" Text="{Binding Name, FallbackValue=Blah Blah Blah}" 
							Foreground="{Binding DataContext.UserSettings.TextBrush,
							RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type views:MainView}},
							UpdateSourceTrigger=PropertyChanged}" 
							FontSize="{DynamicResource DefaultLabelSize}" Padding="6,4"
							/>
                    </Grid>
                </ToggleButton>
            </Grid>
        </DataTemplate>
    </UserControl.Resources>

    <Grid x:Name="LayoutRoot" Margin="0,-5">
          <Grid.ColumnDefinitions>
    		<ColumnDefinition/>
    		<ColumnDefinition Width="Auto"/>
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
          </Grid.RowDefinitions>

        <Border x:Name="HeaderGrid" 
			Height="37" Background="{Binding DataContext.UserSettings.HeaderBrush, RelativeSource={RelativeSource AncestorType={x:Type views:MainView}, Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged}" 
			BorderThickness="1" CornerRadius="2" 
			BorderBrush="{Binding DataContext.UserSettings.BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type views:MainView}, Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged}" MinWidth="800" Grid.ColumnSpan="2"
			>
            <TextBlock x:Name="HomeTextBlock" 
				HorizontalAlignment="Left" TextWrapping="Wrap" 
				Text="{Binding HeaderTitle}"
				FontFamily="{DynamicResource APLDefault}"
				FontSize="{DynamicResource DefaultHeaderSize}"
				Foreground="{Binding DataContext.UserSettings.TextBrush, RelativeSource={RelativeSource AncestorType={x:Type views:MainView}, Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged}" 
				Margin="8,0,0,0" Padding="0,10,0,0"
				/>
        </Border>
        <Grid x:Name="StepHeader" Grid.Row="1"
				Background="{Binding DataContext.UserSettings.BackgroundBrush, RelativeSource={RelativeSource AncestorType={x:Type views:MainView}, Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged}" Margin="0" MinHeight="30"
				>
        	<TextBlock x:Name="StepHeaderText" 
				TextWrapping="Wrap" Text="{Binding StepHeader, FallbackValue=This is the StepName}" 
				FontFamily="{DynamicResource APLDefault}" 
				FontSize="{DynamicResource DefaultLabelSize}" 				
				Foreground="{Binding DataContext.UserSettings.TextBrush, RelativeSource={RelativeSource AncestorType={x:Type views:MainView}, Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Margin="4,0"
				/>
        </Grid>
        <Grid x:Name="TileAccessors" Grid.Row="1" Grid.Column="1" Grid.RowSpan="3">
                <ListBox x:Name="AnalyticView"
        			Background="{x:Null}" Cursor="Arrow"
					BorderBrush="{x:Null}"
        			HorizontalContentAlignment="Stretch"
        			MaxHeight="{Binding ActualHeight, ElementName=LayoutRoot}"
        			MaxWidth="{Binding ActualWidth, ElementName=LayoutRoot}"
        			ItemTemplate="{StaticResource HomeSteps}"
                    ItemsSource="{Binding Workflow.Steps, FallbackValue=123}"     
        			ItemContainerStyle="{DynamicResource BlankListBoxItemStyle}"
        			ItemsPanel="{DynamicResource VerticalWrapPanelLayoutTemplate}"
        			Style="{DynamicResource ListBoxStyle}" Margin="0" />
            </Grid>
        <Grid x:Name="HomeViewGrid" Background="White" Grid.Row="2" Grid.RowSpan="2" Margin="0">
                <ContentPresenter Content="{Binding SelectedStepViewModel, UpdateSourceTrigger=PropertyChanged}">
					<ContentPresenter.Resources>
						<DataTemplate DataType="{x:Type vm:AnalyticListViewModel}">
							<Grid x:Name="LayoutRoot" Background="{x:Null}" Width="Auto" Height="Auto">
                                <!--<ListView x:Name="HomeList" ItemsSource="{Binding Identities}" BorderBrush="{x:Null}"  
									ScrollViewer.VerticalScrollBarVisibility="Auto" 
									ScrollViewer.HorizontalScrollBarVisibility="Disabled" Margin="0,2,0,3"
									>
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <WrapPanel Margin="0">
                                                <TextBlock Text="Id: " Margin="0,2" />
                                                <TextBlock Text="{Binding Id}" FontWeight="Bold" Margin="0,2" />
                                                <TextBlock Text=", " Margin="0,2" />
                                                <TextBlock Text="Name: " Margin="0,2" />
                                                <TextBlock Margin="0,2"><Hyperlink Command="{Binding DataContext.IdentitySelectedCommand, RelativeSource={RelativeSource AncestorType={x:Type views:AnalyticFrame}, Mode=FindAncestor}}" CommandParameter="{Binding}"><InlineUIContainer>
                                                		<TextBlock Text="{Binding Name}"/>
                                                	</InlineUIContainer></Hyperlink></TextBlock>
                                                <TextBlock Text="{Binding Name}" Margin="0,2"/>
                                                <TextBlock Text=" (" Margin="0,2" />
                                                <TextBlock Text="{Binding Description}" Margin="0,2" />
                                                <TextBlock Text=")" Margin="0,2" />
                                            </WrapPanel>

                                        </DataTemplate>
                                                                    
                                    </ListView.ItemTemplate>
                                </ListView>-->
							</Grid>
						</DataTemplate>
                        <DataTemplate x:Key="AddDataTypeHere" >
                            <Grid x:Name="LayoutRoot" Width="Auto" Height="Auto">
                                <!--<Grid x:Name="grid1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" >
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Label VerticalAlignment="Center" Grid.Row="0" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Name:"/>
                                    <TextBox x:Name="nameTextBox" Width="120" VerticalAlignment="Center" Text="{Binding Model.Name, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" 
                                             Grid.Row="0" Margin="3" Height="23" HorizontalAlignment="Left" Grid.Column="1"/>
                                    <Label VerticalAlignment="Center" Grid.Row="1" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Description:"/>
                                    <TextBox x:Name="descriptionTextBox" Width="Auto" VerticalAlignment="Center" Text="{Binding Model.Description, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="1" Margin="3" Height="23" HorizontalAlignment="Left" Grid.Column="1"/>
                                    <Label VerticalAlignment="Center" Grid.Row="2" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Entity Id:"/>
                                    <TextBox x:Name="entityIdTextBox" Width="120" VerticalAlignment="Center" Text="{Binding EntityId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Margin="3" Height="23" HorizontalAlignment="Left" Grid.Column="1"/>
                                    <Label VerticalAlignment="Center" Grid.Row="3" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Id:"/>
                                    <TextBox x:Name="idTextBox" Width="120" VerticalAlignment="Center" Text="{Binding Model.Id, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Margin="3" Height="23" HorizontalAlignment="Left" Grid.Column="1"/>
                                    <Label VerticalAlignment="Center" Grid.Row="4" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Is Dirty:"/>
                                    <CheckBox x:Name="isDirtyCheckBox" VerticalAlignment="Center" Grid.Row="4" Margin="3" IsChecked="{Binding IsDirty, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Left" Grid.Column="1" Content=""/>
                                    <Label VerticalAlignment="Center" Grid.Row="5" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Is Valid:"/>
                                    <CheckBox x:Name="isValidCheckBox" VerticalAlignment="Center" Grid.Row="5" Margin="3" IsChecked="{Binding IsValid, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Left" Grid.Column="1" Content=""/>
                                </Grid>-->


                            </Grid>
                        </DataTemplate>
					</ContentPresenter.Resources>
				</ContentPresenter>

                <!--<Xaml:RoutedViewHost Router="{Binding Router}"  HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" />-->
			</Grid>
        <Grid x:Name="ButtonBank" Grid.Row="4" 
				Background="{Binding DataContext.UserSettings.BackgroundBrush, RelativeSource={RelativeSource AncestorType={x:Type views:MainView}, Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,4"
					>
        	<Grid.ColumnDefinitions>
        		<ColumnDefinition Width="2*"/>
        		<ColumnDefinition Width="Auto"/>
        		<ColumnDefinition Width="Auto"/>
        		<ColumnDefinition Width="Auto"/>
        		<ColumnDefinition Width="Auto"/>
        		<ColumnDefinition Width="Auto"/>
        		<ColumnDefinition Width="2*"/>
        	</Grid.ColumnDefinitions>

        	<Button x:Name="PreviousButton" Grid.Column="1"
                Command="{Binding PreviousCommand}"
				Content="Previous" Width="75"  Margin="0,6,4,0"
				Foreground="{Binding DataContext.UserSettings.TextBrush, RelativeSource={RelativeSource AncestorType={x:Type views:MainView}, Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged}"
				Background="{Binding DataContext.UserSettings.HeaderBrush, RelativeSource={RelativeSource AncestorType={x:Type views:MainView}, Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged}"
				BorderBrush="{Binding DataContext.UserSettings.BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type views:MainView}, Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged}" BorderThickness="1"
					/>
        	<Button x:Name="SaveButton" Grid.Column="2"
				Content="Save" Width="75"
				Foreground="{Binding DataContext.UserSettings.TextBrush, RelativeSource={RelativeSource AncestorType={x:Type views:MainView}, Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged}"
				Background="{Binding DataContext.UserSettings.HeaderBrush, RelativeSource={RelativeSource AncestorType={x:Type views:MainView}, Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged}"
				BorderBrush="{Binding DataContext.UserSettings.BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type views:MainView}, Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged}" BorderThickness="1" Margin="0,6,4,0"
					/>
        	<Button x:Name="CancelButton" Grid.Column="3" IsEnabled="False"
				Content="Cancel" Width="75"  Margin="0,6,4,0"
				Foreground="{Binding DataContext.UserSettings.TextBrush, RelativeSource={RelativeSource AncestorType={x:Type views:MainView}, Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged}"
				Background="{Binding DataContext.UserSettings.HeaderBrush, RelativeSource={RelativeSource AncestorType={x:Type views:MainView}, Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged}"
				BorderBrush="{Binding DataContext.UserSettings.BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type views:MainView}, Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged}" BorderThickness="1"
					/>
        	<Button x:Name="ClearButton" Grid.Column="4" IsEnabled="False"
				Content="Clear" Width="75"  Margin="0,6,4,0"
				Foreground="{Binding DataContext.UserSettings.TextBrush, RelativeSource={RelativeSource AncestorType={x:Type views:MainView}, Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged}"
				Background="{Binding DataContext.UserSettings.HeaderBrush, RelativeSource={RelativeSource AncestorType={x:Type views:MainView}, Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged}"
				BorderBrush="{Binding DataContext.UserSettings.BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type views:MainView}, Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged}" BorderThickness="1"
					/>
        	<Button x:Name="NextButton" Grid.Column="5"
                Command="{Binding NextCommand}"
				Content="Next" Width="75"  Margin="0,6,0,0"
				Foreground="{Binding DataContext.UserSettings.TextBrush, RelativeSource={RelativeSource AncestorType={x:Type views:MainView}, Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged}"
				Background="{Binding DataContext.UserSettings.HeaderBrush, RelativeSource={RelativeSource AncestorType={x:Type views:MainView}, Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged}"
				BorderBrush="{Binding DataContext.UserSettings.BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type views:MainView}, Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged}" BorderThickness="1"
					/>
        </Grid>
        <Rectangle Grid.RowSpan="5" Stroke="{Binding DataContext.UserSettings.BorderBrush,
		  RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type views:MainView}},
		  UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="2" RadiusX="2" RadiusY="2" StrokeThickness="1"
		  />
    </Grid>
</UserControl>
